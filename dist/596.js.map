{"version":3,"file":"596.js?ver=7a8d7100595cf09119f1","mappings":"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","sources":["webpack://spotify-deemo/./src/image/music.png","webpack://spotify-deemo/./src/image/fake_Logo.png","webpack://spotify-deemo/./src/Layout/ErrorMessage.tsx","webpack://spotify-deemo/./src/hook/useInfiniteScroll.ts","webpack://spotify-deemo/./src/api/playlist.ts","webpack://spotify-deemo/./src/hook/useFocuse.ts","webpack://spotify-deemo/./src/api/__baseAIP.ts","webpack://spotify-deemo/./src/style/LodingBox.tsx","webpack://spotify-deemo/./src/image/HomeIcon.png","webpack://spotify-deemo/./src/image/SearchIcon.png","webpack://spotify-deemo/./src/Layout/component/NavBox.tsx","webpack://spotify-deemo/./src/image/BookmarkIcon.png","webpack://spotify-deemo/./src/Layout/component/Library/LibraryHead.tsx","webpack://spotify-deemo/./src/utils/crypto.ts","webpack://spotify-deemo/./src/utils/auth.ts","webpack://spotify-deemo/./src/api/userApi.ts","webpack://spotify-deemo/./src/hook/useGetProfile.ts","webpack://spotify-deemo/./src/Layout/component/Library/EmptyPlayList.tsx","webpack://spotify-deemo/./src/image/playIcon.png","webpack://spotify-deemo/./src/Layout/component/Library/PlaylistItem.tsx","webpack://spotify-deemo/./src/Layout/component/Library/Library.tsx","webpack://spotify-deemo/./src/hook/useGetCurrentUserPlaylists.ts","webpack://spotify-deemo/./src/hook/useModal.ts","webpack://spotify-deemo/./src/hook/useRendomColor.ts","webpack://spotify-deemo/./src/image/profileIcon.png","webpack://spotify-deemo/./src/Layout/component/Login/ProfileModal.tsx","webpack://spotify-deemo/./src/Layout/component/Login/Profile.tsx","webpack://spotify-deemo/./src/hook/useOutsideClick.ts","webpack://spotify-deemo/./src/Layout/component/Login/Login.tsx","webpack://spotify-deemo/./src/Layout/component/Topbar.tsx","webpack://spotify-deemo/./src/Layout/AppLayout.tsx"],"sourcesContent":["export default __webpack_public_path__ + \"images/music.png?ver=708d7d1874e81d24a372040f4906d76d\";","export default __webpack_public_path__ + \"images/fake_Logo.png?ver=23c568bf691b001bb110dc7d5d52caaa\";","import { Alert } from \"@mui/material\";\n\nconst ErrorMessage = ({ errMessage }: { errMessage: string }) => {\n  return <Alert severity=\"error\">{errMessage} </Alert>;\n};\n\nexport default ErrorMessage;\n","import { useEffect } from \"react\";\n\nconst useInfiniteScroll = ({\n  page,\n  isLoading,\n  isFinished,\n  onIntersect,\n}: {\n  page: string;\n  isLoading: boolean;\n  isFinished: boolean;\n  onIntersect: () => void;\n}) => {\n  useEffect(() => {\n    if (isLoading) return;\n    if (isFinished) return;\n\n    const observer = new IntersectionObserver(\n      (entries) => {\n        if (entries[0].isIntersecting) {\n          onIntersect();\n        }\n      },\n      { threshold: 0 }\n    );\n\n    const observerTarget = document.getElementById(`observer-${page}`);\n    if (observerTarget) observer.observe(observerTarget);\n\n    return () => {\n      if (observerTarget) observer.unobserve(observerTarget);\n    };\n  }, [isLoading, isFinished, onIntersect]);\n};\n\nexport default useInfiniteScroll;\n","import {\n  GetCurrentUserPlaylistReq,\n  GetCurrentUserPlaylistRes,\n  GetPlaylistItemsReq,\n  GetPlaylistItemsRes,\n  GetPlaylistReq,\n  Playlist,\n} from \"../models/playlist\";\nimport api from \"./__baseAIP\";\n\nexport const getCurrentUserPlaylists = async ({\n  limit,\n  offset,\n}: GetCurrentUserPlaylistReq): Promise<GetCurrentUserPlaylistRes> => {\n  try {\n    const res = await api.get(\"/me/playlists\", {\n      params: { limit, offset },\n    });\n\n    return res.data;\n  } catch (err) {\n    throw new Error(\"실패: playlist 가져오기\");\n  }\n};\n\nexport const getPlaylist = async (\n  params: GetPlaylistReq\n): Promise<Playlist> => {\n  try {\n    const res = await api.get(`/playlists/${params.playlist_id}`, {\n      params,\n    });\n    return res.data;\n  } catch (error) {\n    throw new Error(\"fail getPlaylist\");\n  }\n};\n\nexport const getPlaylistItems = async (\n  params: GetPlaylistItemsReq\n): Promise<GetPlaylistItemsRes> => {\n  try {\n    const res = await api.get(`/playlists/${params.playlist_id}/tracks`, {\n      params,\n    });\n\n    return res.data;\n  } catch (err) {\n    throw new Error(\"fail getPlaylistItems\");\n  }\n};\n","import { useState } from \"react\";\n\nconst useFouces = () => {\n  const [isfocuse, setIsfocuse] = useState<\"show\" | \"none\">(\"none\");\n\n  const on = () => setIsfocuse(\"show\");\n  const off = () => setIsfocuse(\"none\");\n\n  return { isfocuse, on, off };\n};\n\nexport default useFouces;\n","import axios, { AxiosInstance } from \"axios\";\nimport { SPOTIFY_BASE_URL } from \"../configs/commonConfig\";\n\nconst api: AxiosInstance = axios.create({\n  baseURL: SPOTIFY_BASE_URL,\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${localStorage.getItem(\"access_token\")}`,\n  },\n});\n\napi.interceptors.request.use((req) => {\n  req.headers.Authorization = `Bearer ${localStorage.getItem(\"access_token\")}`;\n\n  return req;\n});\n\nexport default api;\n","import styled from \"@mui/styled-engine-sc\";\nimport { LoadingSpinner } from \"./LoadingBar\";\n\nconst LoadState = ({\n  isLoading,\n  isFinished,\n}: {\n  isLoading: boolean;\n  isFinished: boolean;\n}) => {\n  return (\n    <Loding>\n      {isLoading ? (\n        <LoadingSpinner width={30} height={30} />\n      ) : isFinished ? (\n        <div>마지막 입니다.</div>\n      ) : (\n        <></>\n      )}\n    </Loding>\n  );\n};\n\nexport default LoadState;\n\nconst Loding = styled(\"div\")`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 3rem;\n  font-size: 14px;\n  color: #858585;\n`;\n\nexport const Observer = styled(\"div\")`\n  height: 1rem;\n  /* background-color: yellow; */\n`;\n","export default __webpack_public_path__ + \"images/HomeIcon.png?ver=f1ed5e669286c9f953f2fe44403f3326\";","export default __webpack_public_path__ + \"images/SearchIcon.png?ver=c452286440885f40c8e72320be525330\";","import { styled, Typography } from \"@mui/material\";\nimport { NavLink, useLocation } from \"react-router\";\nimport HomeIcon from \"../../image/HomeIcon.png\";\nimport SearchIcon from \"../../image/SearchIcon.png\";\n\nconst NavBox = () => {\n  const { pathname } = useLocation();\n  const isCurrentPath = (menu: string) => (pathname === menu ? \"active\" : \"\");\n\n  return (\n    <Container>\n      <StyledNavLink\n        to=\"/\"\n        className={`${isCurrentPath(\"/\")}`}\n        sx={{ margiBnottom: \"0.7rem\" }}\n      >\n        <img src={HomeIcon} alt=\"홈 아이콘\" />\n        <Typography variant=\"h2\" fontWeight={700}>\n          메인 홈\n        </Typography>\n      </StyledNavLink>\n\n      <StyledNavLink to=\"/search\" className={isCurrentPath(\"/search\")}>\n        <img src={SearchIcon} alt=\"검색 아이콘\" />\n        <Typography variant=\"h2\" fontWeight={700}>\n          검색하기\n        </Typography>\n      </StyledNavLink>\n    </Container>\n  );\n};\n\nexport default NavBox;\n\nconst Container = styled(\"div\")`\n  width: 100%;\n  margin-bottom: 8px;\n  padding: 1.8rem;\n  color: white;\n  background-color: #121212;\n  border-radius: 8px;\n`;\n\nconst StyledNavLink = styled(NavLink)`\n  text-decoration: none;\n  display: flex;\n  align-items: center;\n  gap: 20px;\n  color: #adadad;\n\n  img {\n    opacity: 0.5;\n  }\n  &:hover,\n  &.active {\n    color: white;\n    img {\n      opacity: 1;\n    }\n  }\n`;\n","export default __webpack_public_path__ + \"images/BookmarkIcon.png?ver=b29bf0ae7706e635c9f6294781e08862\";","import { Box, Button, styled, Typography } from \"@mui/material\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport BookmarkIcon from \"../../../image/BookmarkIcon.png\";\n\nconst LibraryHead = () => {\n  return (\n    <Head>\n      <Box display=\"flex\">\n        <Icon src={BookmarkIcon} alt=\"북마크 아이콘\" />\n        <Typography variant=\"h2\" fontWeight={700}>\n          내 라이브러리\n        </Typography>\n      </Box>\n\n      <Button>\n        <AddIcon />\n      </Button>\n    </Head>\n  );\n};\n\nexport default LibraryHead;\n\nconst Head = styled(\"div\")`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin: 1rem;\n`;\nconst Icon = styled(\"img\")`\n  width: 25px;\n  margin-right: 20px;\n`;\n","// https://developer.spotify.com/documentation/web-api/tutorials/code-pkce-flow\n\nexport const generateRandomString = (length: number): string => {\n  const possible =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  const values = crypto.getRandomValues(new Uint8Array(length));\n  return values.reduce((acc, x) => acc + possible[x % possible.length], \"\");\n};\n\nexport const sha256 = async (plain: string): Promise<ArrayBuffer> => {\n  const encoder = new TextEncoder();\n  const data = encoder.encode(plain);\n  return window.crypto.subtle.digest(\"SHA-256\", data);\n};\n\nexport const base64encode = (input: ArrayBuffer) => {\n  return btoa(String.fromCharCode(...new Uint8Array(input)))\n    .replace(/=/g, \"\")\n    .replace(/\\+/g, \"-\")\n    .replace(/\\//g, \"_\");\n};\n","import { clientID, SCOPES } from \"../configs/auth\";\nimport { REDIRCT_URI } from \"../configs/commonConfig\";\nimport { AuthParamsType } from \"../models/auth\";\nimport { base64encode, generateRandomString, sha256 } from \"./crypto\";\n\nexport const getSpotifyLogin = async () => {\n  const codeVerifier = generateRandomString(64);\n  const hashed = await sha256(codeVerifier);\n  const codeChallenge = base64encode(hashed);\n\n  const clientId = clientID;\n  const redirectUri = REDIRCT_URI;\n\n  const scope = SCOPES;\n  const authUrl = new URL(\"https://accounts.spotify.com/authorize\");\n\n  // generated in the previous step\n  window.localStorage.setItem(\"code_verifier\", codeVerifier);\n\n  if (clientId && redirectUri) {\n    const params: AuthParamsType = {\n      response_type: \"code\",\n      client_id: clientId,\n      scope,\n      code_challenge_method: \"S256\",\n      code_challenge: codeChallenge,\n      redirect_uri: redirectUri,\n    };\n\n    authUrl.search = new URLSearchParams(Object.entries(params)).toString();\n\n    // console.log(authUrl.search);\n    window.location.href = authUrl.toString(); // spotify login 주소 열림\n  }\n};\n\nexport const logout = () => {\n  localStorage.removeItem(\"code_verifier\");\n  localStorage.removeItem(\"access_token\");\n  window.location.href = \"/\";\n};\n","import { UserProfile } from \"../models/user\";\nimport { logout } from \"../utils/auth\";\nimport api from \"./__baseAIP\";\n\nexport const getCurrentUserProfile = async (): Promise<UserProfile> => {\n  // console.log(\"api 실행\");\n  try {\n    const res = await api.get(\"/me\");\n\n    return res.data;\n  } catch (err) {\n    logout();\n    throw new Error(\"프로필 얻기 실패\");\n  }\n};\n","import { useQuery, UseQueryResult } from \"@tanstack/react-query\";\nimport { getCurrentUserProfile } from \"../api/userApi\";\nimport { UserProfile } from \"../models/user\";\n\nconst useGetProfile = (): UseQueryResult<UserProfile> => {\n  const accessToken = localStorage.getItem(\"access_token\");\n\n  return useQuery({\n    queryKey: [\"current-user-profile\"],\n    queryFn: getCurrentUserProfile,\n    enabled: !!accessToken, // ac 토큰이 있을 때만 실행\n    staleTime: Infinity, // 무한대로 설정하여 한 번 받아온 데이터는 계속 신선한 것으로 간주\n    refetchOnWindowFocus: false, // 윈도우 포커스 시 재요청 방지\n    refetchOnMount: false, // 컴포넌트 마운트 시 재요청 방지 (이미 캐시된 데이터가 있는 경우)\n    retry: 1, // 실패 시 1번만 재시도\n  });\n};\n\nexport default useGetProfile;\n","import { Button, styled, Typography } from \"@mui/material\";\n\nconst EmptyPlayList = () => {\n  return (\n    <EmptyPlaylistCard>\n      <Typography variant=\"h2\" fontWeight={700}>\n        첫 번째 플레이리스트를 만드세요.\n      </Typography>\n      <div>어렵지 않아요. 저희가 도와드릴게요.</div>\n\n      <CreateBtn variant=\"contained\" color=\"secondary\">\n        플레이리스트 만들기\n      </CreateBtn>\n    </EmptyPlaylistCard>\n  );\n};\n\nexport default EmptyPlayList;\n\nconst EmptyPlaylistCard = styled(\"div\")`\n  padding: 1.5rem;\n  margin-top: 0.5rem;\n  color: white;\n  background-color: #1a1a1a;\n  border-radius: 8;\n`;\n\nconst CreateBtn = styled(Button)`\n  margin-top: 1rem;\n  font-weight: 700;\n`;\n","export default __webpack_public_path__ + \"images/playIcon.png?ver=7a010c498114f1e71e07aada8cdfc680\";","import { styled, Typography } from \"@mui/material\";\nimport useFouces from \"../../../hook/useFocuse\";\nimport MusicIcon from \"../../../image/music.png\";\nimport playIcon from \"../../../image/playIcon.png\";\nimport { SimplifiedPlaylist } from \"../../../models/playlist\";\n\nconst Playlist = ({\n  item,\n  goPage,\n  isSelect,\n}: {\n  item: SimplifiedPlaylist;\n  goPage: () => void;\n  isSelect: boolean;\n}) => {\n  const focuse = useFouces();\n\n  return (\n    <ItemBox\n      onClick={goPage}\n      className={isSelect ? \"select\" : \"\"}\n      onMouseOver={focuse.on}\n      onMouseLeave={focuse.off}\n    >\n      <PicBox>\n        <PlayIcon src={playIcon} className={focuse.isfocuse} />\n\n        {item.images ? (\n          <img src={item.images[0].url} />\n        ) : (\n          <img className=\"musicIcon\" src={MusicIcon} />\n        )}\n      </PicBox>\n\n      <div>\n        <Typography fontSize={16}>{item.name}</Typography>\n        <Typography color=\"#B3B3B3\">\n          플레이리스트 • {item?.owner?.display_name || \"알수없음\"}\n        </Typography>\n      </div>\n    </ItemBox>\n  );\n};\n\nexport default Playlist;\n\nconst ItemBox = styled(\"div\")`\n  display: flex;\n  align-items: center;\n  padding: 0.6rem;\n  border-radius: 4px;\n  cursor: pointer;\n\n  &.select {\n    background-color: #404040;\n  }\n  &:hover {\n    background-color: #1c1c1c;\n  }\n`;\nconst PicBox = styled(\"div\")`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 3.5rem;\n  aspect-ratio: 1/1;\n  margin-right: 1rem;\n  border-radius: 4px;\n  overflow: hidden;\n  background-color: #313131;\n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n  img.musicIcon {\n    width: 70%;\n    height: 70%;\n  }\n`;\nconst PlayIcon = styled(\"img\")`\n  display: none;\n  position: absolute;\n  background-color: #0000007f;\n  &.show {\n    display: block;\n  }\n`;\n","import styled from \"@mui/styled-engine-sc\";\nimport useGetCurrentUserPlaylists from \"../../../hook/useGetCurrentUserPlaylists\";\nimport useGetProfile from \"../../../hook/useGetProfile\";\nimport useInfiniteScroll from \"../../../hook/useInfiniteScroll\";\nimport LoadingBar from \"../../../style/LoadingBar\";\nimport ErrorMessage from \"../../ErrorMessage\";\nimport LoadState, { Observer } from \"../../../style/LodingBox\";\nimport EmptyPlayList from \"./EmptyPlayList\";\nimport PlaylistItem from \"./PlaylistItem\";\nimport { useNavigate, useParams } from \"react-router\";\n\nconst Library = () => {\n  const Navigate = useNavigate();\n  const { id = \"\" } = useParams();\n\n  const { data: user } = useGetProfile();\n  const {\n    data,\n    isLoading,\n    error,\n    hasNextPage, // 다음페이지 있는지?: boolean\n    fetchNextPage, // 다음페이지 가져오는 함수\n    isFetchingNextPage, // 다음페이지 가져오는 중인지? : boolean\n  } = useGetCurrentUserPlaylists({\n    limit: 10,\n    enabled: !!user, // user가 있을 때만 실행\n  });\n\n  // 커스텀 무한 스크롤\n  useInfiniteScroll({\n    page: \"library\",\n    isLoading: isFetchingNextPage,\n    isFinished: !hasNextPage,\n    onIntersect: fetchNextPage,\n  });\n\n  const goPlaylistDetail = (id: string) => Navigate(`/playlist/${id}`);\n\n  if (!user) {\n    return <EmptyPlayList />;\n  }\n  if (isLoading) {\n    return <LoadingBar />;\n  }\n  if (error) {\n    return <ErrorMessage errMessage={error.message} />;\n  }\n  if (!data?.pages || data.pages[0].total === 0) {\n    return <EmptyPlayList />;\n  }\n  return (\n    <ListBox>\n      {data.pages.map((page) =>\n        page.items.map((item, idx) => (\n          <PlaylistItem\n            key={idx}\n            item={item}\n            goPage={() => goPlaylistDetail(item.id || \"\")}\n            isSelect={id === item.id}\n          />\n        ))\n      )}\n\n      <LoadState isLoading={isFetchingNextPage} isFinished={!hasNextPage} />\n      {!isFetchingNextPage && <Observer id=\"observer-library\" />}\n    </ListBox>\n  );\n};\n\nexport default Library;\n\nconst ListBox = styled(\"div\")`\n  height: 100%;\n  padding-bottom: 7rem;\n  overflow: scroll;\n  &::-webkit-scrollbar {\n    width: 6px;\n  }\n  &::-webkit-scrollbar-thumb {\n    background: #636363;\n    border-radius: 10px;\n    cursor: pointer;\n  }\n`;\n","import { useInfiniteQuery } from \"@tanstack/react-query\";\nimport { getCurrentUserPlaylists } from \"../api/playlist\";\nimport { GetCurrentUserPlaylistReq } from \"../models/playlist\";\n\nconst useGetCurrentUserPlaylists = ({\n  limit,\n  enabled,\n}: GetCurrentUserPlaylistReq & { enabled: boolean }) => {\n  return useInfiniteQuery({\n    queryKey: [\"current-user-playlists\"],\n    queryFn: ({ pageParam }) => {\n      return getCurrentUserPlaylists({ limit, offset: pageParam });\n    },\n    enabled,\n    initialPageParam: 0, // 시작 value\n    getNextPageParam: (lastPage) => {\n      // infinitQuery 핵심.\n      // 해당 함수의 리턴값이 pageParam으로 전달된다\n      if (lastPage.next) {\n        const url = new URL(lastPage.next);\n        const nextOffset = url.searchParams.get(\"offset\");\n        return nextOffset ? parseInt(nextOffset) : undefined;\n      }\n      return undefined; // undefined를 호출하면 알아서 멈춘다.\n    },\n  });\n};\n\nexport default useGetCurrentUserPlaylists;\n","import { useState } from \"react\";\n\nconst useModal = () => {\n  const [open, setOpen] = useState(false);\n  const open_modal = () => setOpen(true);\n\n  const close_modal = (f?: () => void): void => {\n    setOpen(false);\n    if (f) f();\n  };\n\n  return { open, close_modal, open_modal };\n};\nexport default useModal;\n","import { useState } from \"react\";\n\nconst codes = [\"#ed9282\", \"#fad57a\", \"#f48aab\", \"#87bbe2\", \"#56b444\"];\n\nconst useRendomColor = () => {\n  const [colorCode, setColorCode] = useState(\"#56b444\");\n\n  const getRandomCode = (): void => {\n    const codeList = codes.filter((c) => c !== colorCode);\n    const randomidx = Math.floor(Math.random() * codeList.length);\n    setColorCode(codeList[randomidx]);\n  };\n\n  return { colorCode, getRandomCode };\n};\n\nexport default useRendomColor;\n","export default __webpack_public_path__ + \"images/profileIcon.png?ver=e2f1e38bebae9a2ca011ed6975e9d0d9\";","import { styled } from \"@mui/material\";\nimport { RefObject } from \"react\";\nimport { logout } from \"../../../utils/auth\";\n\ninterface ModalProps {\n  isOpen: boolean;\n  itemRef: RefObject<HTMLDivElement | null>;\n  changeColorCode: () => void;\n}\n\nconst ProfileModal = ({ isOpen, itemRef, changeColorCode }: ModalProps) => {\n  if (!isOpen) return null;\n\n  return (\n    <ModalBox ref={itemRef}>\n      <Menu\n        onClick={(e) => {\n          e.stopPropagation();\n          changeColorCode();\n        }}\n      >\n        랜덤 프로필\n      </Menu>\n      <div className=\"hr\" />\n\n      <Menu onClick={logout}>Logout</Menu>\n    </ModalBox>\n  );\n};\n\nexport default ProfileModal;\n\nconst ModalBox = styled(\"div\")`\n  position: absolute;\n  right: -30%;\n  top: 110%;\n  width: 12rem;\n  padding: 4px;\n  font-size: 16px;\n  background-color: #303030;\n  border-radius: 4px;\n\n  div.hr {\n    height: 1px;\n    background-color: #484848;\n  }\n`;\nconst Menu = styled(\"div\")`\n  padding: 0.5rem 1rem;\n  border-radius: 4px;\n\n  &:hover {\n    background-color: #4d4d4d;\n    text-decoration: underline;\n  }\n`;\n","import { styled } from \"@mui/material\";\nimport useGetProfile from \"../../../hook/useGetProfile\";\nimport useModal from \"../../../hook/useModal\";\nimport useOutsideClick from \"../../../hook/useOutsideClick\";\nimport useRendomColor from \"../../../hook/useRendomColor\";\nimport ProfileIcon from \"../../../image/profileIcon.png\";\nimport ProfileModal from \"./ProfileModal\";\n\nconst ProfileImage = ({ imageUrl }: { imageUrl: string }) => {\n  return <Icon src={imageUrl} alt=\"프로필 아이콘\" />;\n};\n\nconst Profile = () => {\n  const { data: userProfile } = useGetProfile();\n  const { colorCode, getRandomCode } = useRendomColor();\n  const { open, open_modal, close_modal } = useModal();\n  const ModalRef = useOutsideClick(close_modal);\n\n  const imageUrl = userProfile?.images?.[0]?.url || null;\n\n  return (\n    <Container onClick={open_modal}>\n      <ProfileBox haveImgUrl={!!imageUrl} code={colorCode}>\n        <ProfileImage imageUrl={imageUrl || ProfileIcon} />\n      </ProfileBox>\n\n      <ProfileModal\n        isOpen={open}\n        itemRef={ModalRef}\n        changeColorCode={() => close_modal(getRandomCode)}\n      />\n    </Container>\n  );\n};\n\nexport default Profile;\n\nconst Container = styled(\"div\")`\n  position: relative;\n`;\nconst ProfileBox = styled(\"div\")<{ haveImgUrl: boolean; code: string }>`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 3.4rem;\n  aspect-ratio: 1/1;\n  background-color: ${({ code }) => code};\n  border-radius: 50px;\n  border: 8px solid;\n  border-color: ${({ haveImgUrl, code }) => (haveImgUrl ? code : \"#1f1f1f\")};\n  overflow: hidden;\n  cursor: pointer;\n`;\nconst Icon = styled(\"img\")`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n","import { useEffect, useRef } from \"react\";\n\n/** 모달 바깥을 누르면 모달을 꺼지는 훅 */\nconst useOutsideClick = (f: () => void) => {\n  const itemRef = useRef<HTMLDivElement>(null);\n\n  const click = (e: MouseEvent) => {\n    if (itemRef.current && !itemRef.current.contains(e.target as Node)) {\n      f();\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"mouseup\", click);\n    return () => {\n      document.removeEventListener(\"mouseup\", click);\n    };\n  }, [f]);\n\n  return itemRef;\n};\n\nexport default useOutsideClick;\n","import { Button, styled } from \"@mui/material\";\nimport { getSpotifyLogin } from \"../../../utils/auth\";\nimport Profile from \"./Profile\";\n\nconst LoginBtn = () => {\n  if (localStorage.getItem(\"access_token\")) {\n    return <Profile />;\n  }\n\n  return (\n    <Login variant=\"contained\" color=\"secondary\" onClick={getSpotifyLogin}>\n      로그인하기\n    </Login>\n  );\n};\n\nexport default LoginBtn;\n\nconst Login = styled(Button)`\n  width: 7rem;\n  height: 2.6rem;\n  font-size: 16px;\n  font-weight: bold;\n`;\n","import { styled } from \"@mui/material\";\nimport FackLogo from \"../../image/fake_Logo.png\";\nimport Login from \"./Login/Login\";\n\nconst Topbar = () => {\n  return (\n    <Container>\n      <Logo\n        src={FackLogo}\n        alt=\"fack_logo\"\n        onClick={() => (window.location.href = \"/\")}\n      />\n\n      <Login />\n    </Container>\n  );\n};\n\nexport default Topbar;\n\nconst Container = styled(\"div\")`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  padding: 0 1rem;\n  height: 3rem;\n  margin-bottom: 8px;\n  color: white;\n  border-radius: 8px;\n`;\n\nconst Logo = styled(\"img\")`\n  width: 2.2rem;\n  cursor: pointer;\n`;\n","import { styled } from \"@mui/material\";\nimport { Outlet } from \"react-router\";\nimport NavBox from \"./component/NavBox\";\nimport LibraryHead from \"./component/Library/LibraryHead\";\nimport Library from \"./component/Library/Library\";\nimport Topbar from \"./component/Topbar\";\n\nconst AppLayout = () => {\n  return (\n    <Layout>\n      <Topbar />\n\n      <PageContainer>\n        <SiderBar>\n          <NavBox />\n\n          <LibraryBox>\n            <LibraryHead />\n            <Library />\n          </LibraryBox>\n        </SiderBar>\n\n        <MainContent>\n          <Outlet />\n        </MainContent>\n      </PageContainer>\n    </Layout>\n  );\n};\nexport default AppLayout;\n\nconst Layout = styled(\"div\")`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 100vh;\n  padding: 8px;\n`;\nconst PageContainer = styled(\"div\")`\n  display: flex;\n  flex: 1;\n  height: 100%;\n`;\nconst SiderBar = styled(\"div\")<{ flex?: number }>`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  min-width: 16rem;\n  max-width: 26rem;\n  height: 100%;\n  margin-right: 8px;\n\n  ${({ theme }) => theme.breakpoints.down(\"sm\")} {\n    display: none;\n  }\n`;\nconst LibraryBox = styled(\"div\")<{ flex?: number }>`\n  flex: 1;\n  width: 100%;\n  height: 100%;\n  padding: 0.5rem;\n  color: white;\n  background-color: #121212;\n  border-radius: 8px;\n  overflow: hidden;\n`;\nconst MainContent = styled(\"div\")`\n  flex: 3;\n  height: 100%;\n  background: linear-gradient(to bottom, #252525, #121212 30%);\n  border-radius: 8px;\n  overflow: hidden;\n`;\n"],"names":["_ref","errMessage","_jsxs","Alert","severity","children","page","isLoading","isFinished","onIntersect","useEffect","observer","IntersectionObserver","entries","isIntersecting","threshold","observerTarget","document","getElementById","concat","observe","unobserve","getCurrentUserPlaylists","async","limit","offset","api","get","params","data","err","Error","getPlaylist","playlist_id","error","getPlaylistItems","useFouces","isfocuse","setIsfocuse","useState","on","off","axios","create","baseURL","SPOTIFY_BASE_URL","headers","Authorization","localStorage","getItem","interceptors","request","use","req","_jsx","Loding","LoadingSpinner","width","height","_Fragment","styled","_templateObject","_taggedTemplateLiteral","Observer","_templateObject2","NavBox","pathname","useLocation","isCurrentPath","menu","Container","StyledNavLink","to","className","sx","margiBnottom","src","HomeIcon","alt","Typography","variant","fontWeight","SearchIcon","NavLink","LibraryHead","Head","Box","display","Icon","BookmarkIcon","Button","AddIcon","getSpotifyLogin","codeVerifier","crypto","getRandomValues","Uint8Array","reduce","acc","x","possible","codeChallenge","input","TextEncoder","encode","plain","window","subtle","digest","sha256","btoa","String","fromCharCode","replace","clientId","clientID","redirectUri","REDIRCT_URI","scope","SCOPES","authUrl","URL","setItem","response_type","client_id","code_challenge_method","code_challenge","redirect_uri","search","URLSearchParams","Object","toString","location","href","logout","removeItem","getCurrentUserProfile","useGetProfile","accessToken","useQuery","queryKey","queryFn","enabled","staleTime","Infinity","refetchOnWindowFocus","refetchOnMount","retry","EmptyPlayList","EmptyPlaylistCard","CreateBtn","color","_item$owner","item","goPage","isSelect","focuse","ItemBox","onClick","onMouseOver","onMouseLeave","PicBox","PlayIcon","playIcon","images","url","MusicIcon","fontSize","name","owner","display_name","_templateObject3","Library","Navigate","useNavigate","id","useParams","user","hasNextPage","fetchNextPage","isFetchingNextPage","useInfiniteQuery","_ref2","pageParam","initialPageParam","getNextPageParam","lastPage","next","nextOffset","searchParams","parseInt","undefined","useGetCurrentUserPlaylists","useInfiniteScroll","LoadingBar","ErrorMessage","message","pages","total","ListBox","map","items","idx","PlaylistItem","goPlaylistDetail","LoadState","codes","isOpen","itemRef","changeColorCode","ModalBox","ref","Menu","e","stopPropagation","ProfileImage","imageUrl","Profile","_userProfile$images","userProfile","colorCode","getRandomCode","useRendomColor","setColorCode","codeList","filter","c","randomidx","Math","floor","random","length","open","open_modal","close_modal","useModal","setOpen","f","ModalRef","useRef","click","current","contains","target","addEventListener","removeEventListener","useOutsideClick","ProfileBox","haveImgUrl","code","ProfileIcon","ProfileModal","_ref3","LoginBtn","Login","Topbar","Logo","FackLogo","AppLayout","Layout","PageContainer","SiderBar","LibraryBox","MainContent","Outlet","theme","breakpoints","down","_templateObject4","_templateObject5"],"sourceRoot":""}