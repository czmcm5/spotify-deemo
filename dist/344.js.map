{"version":3,"file":"344.js?ver=b4a1ffab6d01c605db8c","mappings":"wLAAA,QAAe,IAA0B,2DCAzC,EAAe,IAA0B,6D,kBCKzC,MA2BA,EA3BqBA,KACnB,MAAM,SAAEC,IAAaC,EAAAA,EAAAA,MACfC,EAAiBC,GAAkBH,IAAaG,EAAO,SAAW,GAExE,OACEC,EAAAA,EAAAA,MAACC,EAAS,CAAAC,SAAA,EACRF,EAAAA,EAAAA,MAACG,EAAa,CACZC,GAAG,IACHC,UAAS,GAAAC,OAAKR,EAAc,MAC5BS,GAAI,CAAEC,aAAc,UAAWN,SAAA,EAE/BO,EAAAA,EAAAA,KAAA,OAAKC,IAAKC,EAAUC,IAAI,WACxBH,EAAAA,EAAAA,KAACI,EAAAA,EAAU,CAACC,QAAQ,KAAKC,WAAY,IAAIb,SAAC,aAK5CF,EAAAA,EAAAA,MAACG,EAAa,CAACC,GAAG,UAAUC,UAAWP,EAAc,WAAWI,SAAA,EAC9DO,EAAAA,EAAAA,KAAA,OAAKC,IAAKM,EAAYJ,IAAI,YAC1BH,EAAAA,EAAAA,KAACI,EAAAA,EAAU,CAACC,QAAQ,KAAKC,WAAY,IAAIb,SAAC,gBAU5CD,GAAYgB,EAAAA,EAAAA,IAAO,MAAPA,CAAaC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,2IASzBhB,GAAgBc,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAeI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,yO,iCC3CrC,QAAe,IAA0B,+D,QCIzC,MAiBA,EAjBoBG,KAEhBtB,EAAAA,EAAAA,MAACuB,EAAI,CAAArB,SAAA,EACHF,EAAAA,EAAAA,MAACwB,EAAAA,EAAG,CAACC,QAAQ,OAAMvB,SAAA,EACjBO,EAAAA,EAAAA,KAACiB,EAAI,CAAChB,IAAKiB,EAAcf,IAAI,aAC7BH,EAAAA,EAAAA,KAACI,EAAAA,EAAU,CAACC,QAAQ,KAAKC,WAAY,IAAIb,SAAC,gBAK5CO,EAAAA,EAAAA,KAACmB,EAAAA,EAAM,CAAA1B,UACLO,EAAAA,EAAAA,KAACoB,EAAAA,EAAO,SAQVN,GAAON,EAAAA,EAAAA,IAAO,MAAPA,CAAaC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,wGAMpBO,GAAOT,EAAAA,EAAAA,IAAO,MAAPA,CAAaI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,iD,kCC1B1B,MAAMW,EAAqBC,EAAAA,EAAMC,OAAO,CACtCC,QAASC,EAAAA,EACTC,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAF9B,OAAY+B,aAAaC,QAAQ,oBAIlDR,EAAIS,aAAaC,QAAQC,KAAKC,IAC5BA,EAAIP,QAAQC,cAAgB,UAAH9B,OAAa+B,aAAaC,QAAQ,iBAEpDI,KAGT,U,cCdO,MAAMC,EAAwBC,UAEnC,IAGE,aAFkBd,EAAIe,IAAI,QAEfC,IACb,CAAE,MAAOC,GACP,MAAM,IAAIC,MAAM,YAClB,GCOF,EAdsBC,KACpB,MAAMC,EAAcb,aAAaC,QAAQ,gBAEzC,OAAOa,EAAAA,EAAAA,GAAS,CACdC,SAAU,CAAC,wBACXC,QAASV,EACTW,UAAWJ,EACXK,UAAWC,IACXC,sBAAsB,EACtBC,gBAAgB,EAChBC,MAAO,K,4BCZX,MAeA,EAfsBC,KAElB5D,EAAAA,EAAAA,MAAC6D,EAAiB,CAAA3D,SAAA,EAChBO,EAAAA,EAAAA,KAACI,EAAAA,EAAU,CAACC,QAAQ,KAAKC,WAAY,IAAIb,SAAC,wBAG1CO,EAAAA,EAAAA,KAAA,OAAAP,SAAK,0BAELO,EAAAA,EAAAA,KAACqD,EAAS,CAAChD,QAAQ,YAAYiD,MAAM,YAAW7D,SAAC,kBASjD2D,GAAoB5C,EAAAA,EAAAA,IAAO,MAAPA,CAAaC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,yHAQjC2C,GAAY7C,EAAAA,EAAAA,IAAOW,EAAAA,EAAPX,CAAcI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,oD,QCxBhC,MAaA,EAbiB6C,IAA8C,IAA7C,KAAEC,GAAsCD,EACxD,OAAOC,EAAKC,KAAI,CAACC,EAAMC,KAAG,IAAAC,EAAA,OACxB5D,EAAAA,EAAAA,KAAC6D,EAAW,CAAApE,UACVF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEO,EAAAA,EAAAA,KAACI,EAAAA,EAAU,CAAC0D,SAAU,GAAGrE,SAAEiE,EAAKK,QAChCxE,EAAAA,EAAAA,MAACa,EAAAA,EAAU,CAACkD,MAAM,UAAS7D,SAAA,CAAC,aAChBiE,SAAW,QAAPE,EAAJF,EAAMM,aAAK,IAAAJ,OAAA,EAAXA,EAAaK,eAAgB,cAJ3BN,OAahBE,GAAcrD,EAAAA,EAAAA,IAAO,MAAPA,CAAaC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4MAWlBF,EAAAA,EAAAA,IAAO,MAAPA,CAAaI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,8N,gCCnB5B,MAsDA,EAtDgBwD,KACd,MAAQ7B,KAAM8B,GAAS3B,KACjB,KACJH,EAAI,UACJ+B,EAAS,MACTC,EAAK,YACLC,EAAW,cACXC,EAAa,mBACbC,GCd+BjB,KAGF,IAHG,MAClCkB,EAAK,OACLC,GAC0BnB,EAC1B,OAAOoB,EAAAA,EAAAA,GAAiB,CACtBhC,SAAU,CAAC,0BACXC,QAASgC,IAAmB,IAAlB,UAAEC,GAAWD,EACrB,MCLiCzC,WAG8B,IAHvB,MAC5CsC,EAAK,OACLC,GAC0BnB,EAC1B,IAKE,aAJkBlC,EAAIe,IAAI,gBAAiB,CACzC0C,OAAQ,CAAEL,QAAOC,aAGRrC,IACb,CAAE,MAAOC,GACP,MAAM,IAAIC,MAAM,oBAClB,GDPWwC,CAAwB,CAAEN,QAAOC,OAAQG,KAElDG,iBAAkB,EAClBC,iBAAmBC,IAGjB,GAAIA,EAASC,KAAM,CACjB,MACMC,EADM,IAAIC,IAAIH,EAASC,MACNG,aAAalD,IAAI,UACxC,OAAOgD,EAAaG,SAASH,QAAcI,CAC7C,MDFAC,CAA2B,CAC7BhB,MAAO,GACPC,OAAQ,IAUV,MG7BwBnB,KAQpB,IARqB,UACzBa,EAAS,WACTsB,EAAU,YACVC,GAKDpC,GACCqC,EAAAA,EAAAA,YAAU,KACR,GAAIxB,EAAW,OACf,GAAIsB,EAAY,OAEhB,MAAMG,EAAW,IAAIC,sBAClBC,IACKA,EAAQ,GAAGC,gBACbL,MAGJ,CAAEM,UAAW,IAGTC,EAAiBC,SAASC,eAAe,YAG/C,OAFIF,GAAgBL,EAASQ,QAAQH,GAE9B,KACDA,GAAgBL,EAASS,UAAUJ,MAExC,CAAC9B,EAAWsB,EAAYC,KHL3BY,CAAkB,CAChBnC,UAAWI,EACXkB,YAAapB,EACbqB,YAAapB,IAGVJ,EAGDC,GACKpE,EAAAA,EAAAA,KAACwG,EAAAA,EAAU,IAEhBnC,GACKrE,EAAAA,EAAAA,KAACyG,EAAAA,EAAY,CAACC,WAAYrC,EAAMsC,UAEpCtE,SAAAA,EAAMuE,OAAiC,IAAxBvE,EAAKuE,MAAM,GAAGC,OAIhCtH,EAAAA,EAAAA,MAAAuH,EAAAA,SAAA,CAAArH,SAAA,CACG4C,EAAKuE,MAAMnD,KAAI,CAACsD,EAAMpD,KACrB3D,EAAAA,EAAAA,KAACgH,EAAY,CAAWxD,KAAMuD,EAAKE,OAAhBtD,MAGrB3D,EAAAA,EAAAA,KAACkH,EAAM,CAAAzH,SACJ+E,GACCxE,EAAAA,EAAAA,KAAA,OAAKJ,UAAU,YACZ0E,GAGHtE,EAAAA,EAAAA,KAAA8G,EAAAA,SAAA,KAFA9G,EAAAA,EAAAA,KAAA,OAAAP,SAAK,gBAMP+E,IAAsBxE,EAAAA,EAAAA,KAACmH,EAAQ,CAACC,GAAG,iBAlBhCpH,EAAAA,EAAAA,KAACmD,EAAa,KATdnD,EAAAA,EAAAA,KAACmD,EAAa,KAkCnB+D,GAAS1G,EAAAA,EAAAA,IAAO,MAAPA,CAAaC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,ybAwBtByG,GAAW3G,EAAAA,EAAAA,IAAO,MAAPA,CAAaI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,8DI1F9B,EAAe,IAA0B,4D,cCElC,MCGM2G,EAAkBlF,UAC7B,MAAMmF,EDDSC,OAAOC,gBAAgB,IAAIC,WCCA,KDA5BC,QAAO,CAACC,EAAKC,IAAMD,EAF/B,iEAE8CC,EAAIC,KAAkB,ICEhEC,GDOqBC,OANP5F,WACpB,MACME,GADU,IAAI2F,aACCC,OAAOC,GAC5B,OAAOC,OAAOZ,OAAOa,OAAOC,OAAO,UAAWhG,ICLzBiG,CAAOhB,GDSrBiB,KAAKC,OAAOC,gBAAgB,IAAIhB,WAAWM,KAC/CW,QAAQ,KAAM,IACdA,QAAQ,MAAO,KACfA,QAAQ,MAAO,MAJSX,MCL3B,MAAMY,EAAWC,EAAAA,GACXC,EAAcC,EAAAA,EAEdC,EAAQC,EAAAA,GACRC,EAAU,IAAI5D,IAAI,0CAKxB,GAFA8C,OAAOvG,aAAasH,QAAQ,gBAAiB5B,GAEzCqB,GAAYE,EAAa,CAC3B,MAAM/D,EAAyB,CAC7BqE,cAAe,OACfC,UAAWT,EACXI,QACAM,sBAAuB,OACvBC,eAAgBxB,EAChByB,aAAcV,GAGhBI,EAAQO,OAAS,IAAIC,gBAAgBC,OAAO3D,QAAQjB,IAAS6E,WAG7DxB,OAAOyB,SAASC,KAAOZ,EAAQU,UACjC,GAGWG,EAASA,KACpBlI,aAAamI,WAAW,iBACxBnI,aAAamI,WAAW,gBACxB5B,OAAOyB,SAASC,KAAO,KCrCnBG,GAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,WCF3D,GAAe,IAA0B,8D,UCUzC,MAoBA,GApBqBzG,IAAsD,IAArD,OAAE0G,EAAM,QAAEC,EAAO,gBAAEC,GAA6B5G,EACpE,OAAK0G,GAGH1K,EAAAA,EAAAA,MAAC6K,GAAQ,CAACC,IAAKH,EAAQzK,SAAA,EACrBO,EAAAA,EAAAA,KAACsK,GAAI,CACHC,QAAUC,IACRA,EAAEC,kBACFN,KACA1K,SACH,YAGDO,EAAAA,EAAAA,KAAA,OAAKJ,UAAU,QAEfI,EAAAA,EAAAA,KAACsK,GAAI,CAACC,QAAST,EAAOrK,SAAC,cAdP,MAqBhB2K,IAAW5J,EAAAA,EAAAA,IAAO,MAAPA,CAAaC,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,+OAexB4J,IAAO9J,EAAAA,EAAAA,IAAO,MAAPA,CAAaI,KAAAA,IAAAF,EAAAA,EAAAA,GAAA,+I,aCvC1B,MAAMgK,GAAenH,IAAwC,IAAvC,SAAEoH,GAAgCpH,EACtD,OAAOvD,EAAAA,EAAAA,KAACiB,GAAI,CAAChB,IAAK0K,EAAUxK,IAAI,aA0BlC,GAvBgByK,KAAM,IAAAC,EACpB,MAAQxI,KAAMyI,GAAgBtI,KACxB,UAAEuI,EAAS,cAAEC,GHVEC,MACrB,MAAOF,EAAWG,IAAgBC,EAAAA,EAAAA,UAAS,WAQ3C,MAAO,CAAEJ,YAAWC,cANEA,KACpB,MAAMI,EAAWpB,GAAMqB,QAAQC,GAAMA,IAAMP,IACrCQ,EAAYC,KAAKC,MAAMD,KAAKE,SAAWN,EAASO,QACtDT,EAAaE,EAASG,OGIaN,IAC/B,KAAEW,EAAI,WAAEC,EAAU,YAAEC,GCbXC,MACf,MAAOH,EAAMI,IAAWb,EAAAA,EAAAA,WAAS,GAQjC,MAAO,CAAES,OAAME,YALMG,IACnBD,GAAQ,GACJC,GAAGA,KAGmBJ,WAPTA,IAAMG,GAAQ,KDWSD,GACpCG,EEbiBD,KACvB,MAAM/B,GAAUiC,EAAAA,EAAAA,QAAuB,MAEjCC,EAAS5B,IACTN,EAAQmC,UAAYnC,EAAQmC,QAAQC,SAAS9B,EAAE+B,SACjDN,KAWJ,OAPArG,EAAAA,EAAAA,YAAU,KACRO,SAASqG,iBAAiB,UAAWJ,GAC9B,KACLjG,SAASsG,oBAAoB,UAAWL,MAEzC,CAACH,IAEG/B,GFHUwC,CAAgBZ,GAE3BnB,GAAWG,SAAmB,QAARD,EAAXC,EAAa6B,cAAM,IAAA9B,GAAK,QAALA,EAAnBA,EAAsB,UAAE,IAAAA,OAAA,EAAxBA,EAA0B+B,MAAO,KAElD,OACErN,EAAAA,EAAAA,MAACC,GAAS,CAAC+K,QAASsB,EAAWpM,SAAA,EAC7BO,EAAAA,EAAAA,KAAC6M,GAAU,CAACC,aAAcnC,EAAUoC,KAAMhC,EAAUtL,UAClDO,EAAAA,EAAAA,KAAC0K,GAAY,CAACC,SAAUA,GAAYqC,QAGtChN,EAAAA,EAAAA,KAACiN,GAAY,CACXhD,OAAQ2B,EACR1B,QAASgC,EACT/B,gBAAiBA,IAAM2B,EAAYd,SAQrCxL,IAAYgB,EAAAA,EAAAA,IAAO,MAAPA,CAAaC,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,iCAGzBmM,IAAarM,EAAAA,EAAAA,IAAO,MAAPA,CAAaI,KAAAA,IAAAF,EAAAA,EAAAA,GAAA,+PAMVkE,IAAA,IAAC,KAAEmI,GAAMnI,EAAA,OAAKmI,KAGlBG,IAAA,IAAC,WAAEJ,EAAU,KAAEC,GAAMG,EAAA,OAAMJ,EAAaC,EAAO,aAI3D9L,IAAOT,EAAAA,EAAAA,IAAO,MAAPA,CAAa2M,KAAAA,IAAAzM,EAAAA,EAAAA,GAAA,iE,OGjD1B,MAYA,GAZiB0M,IACXxL,aAAaC,QAAQ,iBAChB7B,EAAAA,EAAAA,KAAC4K,GAAO,KAIf5K,EAAAA,EAAAA,KAACqN,GAAK,CAAChN,QAAQ,YAAYiD,MAAM,YAAYiH,QAASlD,EAAgB5H,SAAC,UAQrE4N,IAAQ7M,EAAAA,EAAAA,IAAOW,EAAAA,EAAPX,CAAcC,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,uF,UCd5B,MAcA,GAde4M,KAEX/N,EAAAA,EAAAA,MAACC,GAAS,CAAAC,SAAA,EACRO,EAAAA,EAAAA,KAACuN,GAAI,CACHtN,IAAKuN,EACLrN,IAAI,YACJoK,QAASA,IAAOpC,OAAOyB,SAASC,KAAO,OAGzC7J,EAAAA,EAAAA,KAACqN,GAAK,OAON7N,IAAYgB,EAAAA,EAAAA,IAAO,MAAPA,CAAaC,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,2MAYzB6M,IAAO/M,EAAAA,EAAAA,IAAO,MAAPA,CAAaI,KAAAA,IAAAF,EAAAA,EAAAA,GAAA,gD,mBCzB1B,MAsBA,GAtBkB+M,KAEdlO,EAAAA,EAAAA,MAACmO,GAAM,CAAAjO,SAAA,EACLO,EAAAA,EAAAA,KAACsN,GAAM,KAEP/N,EAAAA,EAAAA,MAACoO,GAAa,CAAAlO,SAAA,EACZF,EAAAA,EAAAA,MAACqO,GAAQ,CAAAnO,SAAA,EACPO,EAAAA,EAAAA,KAACd,EAAY,KAEbK,EAAAA,EAAAA,MAACsO,GAAU,CAAApO,SAAA,EACTO,EAAAA,EAAAA,KAACa,EAAW,KACZb,EAAAA,EAAAA,KAACkE,EAAO,WAIZlE,EAAAA,EAAAA,KAAC8N,GAAW,CAAArO,UACVO,EAAAA,EAAAA,KAAC+N,EAAAA,GAAM,YAQXL,IAASlN,EAAAA,EAAAA,IAAO,MAAPA,CAAaC,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,0GAOtBiN,IAAgBnN,EAAAA,EAAAA,IAAO,MAAPA,CAAaI,KAAAA,IAAAF,EAAAA,EAAAA,GAAA,wCAI7BkN,IAAWpN,EAAAA,EAAAA,IAAO,MAAPA,CAAa2M,KAAAA,IAAAzM,EAAAA,EAAAA,GAAA,wLAS1B6C,IAAA,IAAC,MAAEyK,GAAOzK,EAAA,OAAKyK,EAAMC,YAAYC,KAAK,SAIpCL,IAAarN,EAAAA,EAAAA,IAAO,MAAPA,CAAa2N,KAAAA,IAAAzN,EAAAA,EAAAA,GAAA,8HAQ1BoN,IAActN,EAAAA,EAAAA,IAAO,MAAPA,CAAa4N,KAAAA,IAAA1N,EAAAA,EAAAA,GAAA,+H,0DC7DjC,MAIA,EAJqB6C,IAA4C,IAA3C,WAAEmD,GAAoCnD,EAC1D,OAAOhE,EAAAA,EAAAA,MAAC8O,EAAAA,EAAK,CAACC,SAAS,QAAO7O,SAAA,CAAEiH,EAAW,O","sources":["webpack://spotify-deemo/./src/image/HomeIcon.png","webpack://spotify-deemo/./src/image/SearchIcon.png","webpack://spotify-deemo/./src/Layout/component/NavComponent.tsx","webpack://spotify-deemo/./src/image/BookmarkIcon.png","webpack://spotify-deemo/./src/Layout/component/Library/LibraryHead.tsx","webpack://spotify-deemo/./src/api/__baseAIP.ts","webpack://spotify-deemo/./src/api/userApi.ts","webpack://spotify-deemo/./src/hook/useGetProfile.ts","webpack://spotify-deemo/./src/Layout/component/Library/EmptyPlayList.tsx","webpack://spotify-deemo/./src/Layout/component/Library/PlaylistItem.tsx","webpack://spotify-deemo/./src/Layout/component/Library/Library.tsx","webpack://spotify-deemo/./src/hook/useGetCurrentUserPlaylists.ts","webpack://spotify-deemo/./src/api/playlist.ts","webpack://spotify-deemo/./src/hook/useInfiniteScroll.ts","webpack://spotify-deemo/./src/image/fake_Logo.png","webpack://spotify-deemo/./src/utils/crypto.ts","webpack://spotify-deemo/./src/utils/auth.ts","webpack://spotify-deemo/./src/hook/useRendomColor.ts","webpack://spotify-deemo/./src/image/profileIcon.png","webpack://spotify-deemo/./src/Layout/component/Login/ProfileModal.tsx","webpack://spotify-deemo/./src/Layout/component/Login/Profile.tsx","webpack://spotify-deemo/./src/hook/useModal.ts","webpack://spotify-deemo/./src/hook/useOutsideClick.ts","webpack://spotify-deemo/./src/Layout/component/Login/Login.tsx","webpack://spotify-deemo/./src/Layout/component/Topbar.tsx","webpack://spotify-deemo/./src/Layout/AppLayout.tsx","webpack://spotify-deemo/./src/Layout/ErrorMessage.tsx"],"sourcesContent":["export default __webpack_public_path__ + \"images/HomeIcon.png?ver=f1ed5e669286c9f953f2fe44403f3326\";","export default __webpack_public_path__ + \"images/SearchIcon.png?ver=c452286440885f40c8e72320be525330\";","import { styled, Typography } from \"@mui/material\";\nimport { NavLink, useLocation } from \"react-router\";\nimport HomeIcon from \"../../image/HomeIcon.png\";\nimport SearchIcon from \"../../image/SearchIcon.png\";\n\nconst NavComponent = () => {\n  const { pathname } = useLocation();\n  const isCurrentPath = (menu: string) => (pathname === menu ? \"active\" : \"\");\n\n  return (\n    <Container>\n      <StyledNavLink\n        to=\"/\"\n        className={`${isCurrentPath(\"/\")}`}\n        sx={{ margiBnottom: \"0.7rem\" }}\n      >\n        <img src={HomeIcon} alt=\"홈 아이콘\" />\n        <Typography variant=\"h2\" fontWeight={700}>\n          메인 홈\n        </Typography>\n      </StyledNavLink>\n\n      <StyledNavLink to=\"/search\" className={isCurrentPath(\"/search\")}>\n        <img src={SearchIcon} alt=\"검색 아이콘\" />\n        <Typography variant=\"h2\" fontWeight={700}>\n          검색하기\n        </Typography>\n      </StyledNavLink>\n    </Container>\n  );\n};\n\nexport default NavComponent;\n\nconst Container = styled(\"div\")`\n  width: 100%;\n  margin-bottom: 8px;\n  padding: 1.8rem;\n  color: white;\n  background-color: #121212;\n  border-radius: 8px;\n`;\n\nconst StyledNavLink = styled(NavLink)`\n  text-decoration: none;\n  display: flex;\n  align-items: center;\n  gap: 20px;\n  color: #adadad;\n  img {\n    opacity: 0.5;\n  }\n\n  &:hover,\n  &.active {\n    color: white;\n    img {\n      opacity: 1;\n    }\n  }\n`;\n","export default __webpack_public_path__ + \"images/BookmarkIcon.png?ver=b29bf0ae7706e635c9f6294781e08862\";","import { Box, Button, styled, Typography } from \"@mui/material\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport BookmarkIcon from \"../../../image/BookmarkIcon.png\";\n\nconst LibraryHead = () => {\n  return (\n    <Head>\n      <Box display=\"flex\">\n        <Icon src={BookmarkIcon} alt=\"북마크 아이콘\" />\n        <Typography variant=\"h2\" fontWeight={700}>\n          내 라이브러리\n        </Typography>\n      </Box>\n\n      <Button>\n        <AddIcon />\n      </Button>\n    </Head>\n  );\n};\n\nexport default LibraryHead;\n\nconst Head = styled(\"div\")`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin: 1rem;\n`;\nconst Icon = styled(\"img\")`\n  width: 25px;\n  margin-right: 20px;\n`;\n","import axios, { AxiosInstance } from \"axios\";\nimport { SPOTIFY_BASE_URL } from \"../configs/commonConfig\";\n\nconst api: AxiosInstance = axios.create({\n  baseURL: SPOTIFY_BASE_URL,\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${localStorage.getItem(\"access_token\")}`,\n  },\n});\n\napi.interceptors.request.use((req) => {\n  req.headers.Authorization = `Bearer ${localStorage.getItem(\"access_token\")}`;\n\n  return req;\n});\n\nexport default api;\n","import { UserProfile } from \"../models/user\";\nimport api from \"./__baseAIP\";\n\nexport const getCurrentUserProfile = async (): Promise<UserProfile> => {\n  // console.log(\"api 실행\");\n  try {\n    const res = await api.get(\"/me\");\n\n    return res.data;\n  } catch (err) {\n    throw new Error(\"프로필 얻기 실패\");\n  }\n};\n","import { useQuery, UseQueryResult } from \"@tanstack/react-query\";\nimport { getCurrentUserProfile } from \"../api/userApi\";\nimport { UserProfile } from \"../models/user\";\n\nconst useGetProfile = (): UseQueryResult<UserProfile> => {\n  const accessToken = localStorage.getItem(\"access_token\");\n\n  return useQuery({\n    queryKey: [\"current-user-profile\"],\n    queryFn: getCurrentUserProfile,\n    enabled: !!accessToken, // ac 토큰이 있을 때만 실행\n    staleTime: Infinity, // 무한대로 설정하여 한 번 받아온 데이터는 계속 신선한 것으로 간주\n    refetchOnWindowFocus: false, // 윈도우 포커스 시 재요청 방지\n    refetchOnMount: false, // 컴포넌트 마운트 시 재요청 방지 (이미 캐시된 데이터가 있는 경우)\n    retry: 1, // 실패 시 1번만 재시도\n  });\n};\n\nexport default useGetProfile;\n","import { Button, styled, Typography } from \"@mui/material\";\n\nconst EmptyPlayList = () => {\n  return (\n    <EmptyPlaylistCard>\n      <Typography variant=\"h2\" fontWeight={700}>\n        첫 번째 플레이리스트를 만드세요.\n      </Typography>\n      <div>어렵지 않아요. 저희가 도와드릴게요.</div>\n\n      <CreateBtn variant=\"contained\" color=\"secondary\">\n        플레이리스트 만들기\n      </CreateBtn>\n    </EmptyPlaylistCard>\n  );\n};\n\nexport default EmptyPlayList;\n\nconst EmptyPlaylistCard = styled(\"div\")`\n  padding: 1.5rem;\n  margin-top: 0.5rem;\n  color: white;\n  background-color: #1a1a1a;\n  border-radius: 8;\n`;\n\nconst CreateBtn = styled(Button)`\n  margin-top: 1rem;\n  font-weight: 700;\n`;\n","import { styled, Typography } from \"@mui/material\";\nimport { SimplifiedPlaylist } from \"../../../models/playlist\";\n\nconst Playlist = ({ list }: { list: SimplifiedPlaylist[] }) => {\n  return list.map((item, idx) => (\n    <PlayListBox key={idx}>\n      <div>\n        <Typography fontSize={16}>{item.name}</Typography>\n        <Typography color=\"#B3B3B3\">\n          플레이리스트 • {item?.owner?.display_name || \"알수없음\"}\n        </Typography>\n      </div>\n    </PlayListBox>\n  ));\n};\n\nexport default Playlist;\n\nconst PlayListBox = styled(\"div\")`\n  display: flex;\n  align-items: center;\n  padding: 0.6rem;\n  border-radius: 4px;\n  cursor: pointer;\n  &:hover {\n    background-color: #1c1c1c;\n    /* background-color: #404040; */\n  }\n`;\nconst PicBox = styled(\"div\")`\n  width: 3.5rem;\n  aspect-ratio: 1/1;\n  margin-right: 1rem;\n  border-radius: 4px;\n  overflow: hidden;\n  background-color: #313131;\n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n`;\n","import { useEffect, useRef, useState } from \"react\";\nimport useGetCurrentUserPlaylists from \"../../../hook/useGetCurrentUserPlaylists\";\nimport useGetProfile from \"../../../hook/useGetProfile\";\nimport LoadingBar from \"../../../style/LoadingBar\";\nimport ErrorMessage from \"../../ErrorMessage\";\nimport EmptyPlayList from \"./EmptyPlayList\";\nimport PlaylistItem from \"./PlaylistItem\";\nimport styled from \"@mui/styled-engine-sc\";\nimport useInfiniteScroll from \"../../../hook/useInfiniteScroll\";\n\nconst Library = () => {\n  const { data: user } = useGetProfile();\n  const {\n    data,\n    isLoading,\n    error,\n    hasNextPage, // 다음페이지 있는지?: boolean\n    fetchNextPage, // 다음페이지 가져오는 함수\n    isFetchingNextPage, // 다음페이지 가져오는 중인지? : boolean\n  } = useGetCurrentUserPlaylists({\n    limit: 10,\n    offset: 0,\n  });\n\n  // 커스텀 무한 스크롤\n  useInfiniteScroll({\n    isLoading: isFetchingNextPage,\n    isFinished: !hasNextPage,\n    onIntersect: fetchNextPage,\n  });\n\n  if (!user) {\n    return <EmptyPlayList />;\n  }\n  if (isLoading) {\n    return <LoadingBar />;\n  }\n  if (error) {\n    return <ErrorMessage errMessage={error.message} />;\n  }\n  if (!data?.pages || data.pages[0].total === 0) {\n    return <EmptyPlayList />;\n  }\n  return (\n    <>\n      {data.pages.map((page, idx) => (\n        <PlaylistItem key={idx} list={page.items} />\n      ))}\n\n      <Loding>\n        {isFetchingNextPage ? (\n          <div className=\"loading\" />\n        ) : !hasNextPage ? (\n          <div>마지막 입니다.</div>\n        ) : (\n          <></>\n        )}\n      </Loding>\n\n      {!isFetchingNextPage && <Observer id=\"observer\" />}\n    </>\n  );\n};\n\nexport default Library;\n\nconst Loding = styled(\"div\")`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 3rem;\n  font-size: 14px;\n  color: #858585;\n\n  div.loading {\n    box-sizing: border;\n    width: 30px;\n    height: 30px;\n    border: 4px solid #25c56a54;\n    border-top-color: #25c56a;\n    border-radius: 100%;\n\n    animation: spin 1s ease-in-out infinite;\n  }\n  @keyframes spin {\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`;\nconst Observer = styled(\"div\")`\n  height: 1rem;\n  /* background-color: yellow; */\n`;\n","import { useInfiniteQuery } from \"@tanstack/react-query\";\nimport { getCurrentUserPlaylists } from \"../api/playlist\";\nimport { GetCurrentUserPlaylistReq } from \"../models/playlist\";\n\nconst useGetCurrentUserPlaylists = ({\n  limit,\n  offset,\n}: GetCurrentUserPlaylistReq) => {\n  return useInfiniteQuery({\n    queryKey: [\"current-user-playlists\"],\n    queryFn: ({ pageParam }) => {\n      return getCurrentUserPlaylists({ limit, offset: pageParam });\n    },\n    initialPageParam: 0, // 시작 value\n    getNextPageParam: (lastPage) => {\n      // infinitQuery 핵심.\n      // 해당 함수의 리턴값이 pageParam으로 전달된다\n      if (lastPage.next) {\n        const url = new URL(lastPage.next);\n        const nextOffset = url.searchParams.get(\"offset\");\n        return nextOffset ? parseInt(nextOffset) : undefined;\n      }\n      return undefined; // undefined를 호출하면 알아서 멈춘다.\n    },\n  });\n};\n\nexport default useGetCurrentUserPlaylists;\n","import {\n  GetCurrentUserPlaylistReq,\n  GetCurrentUserPlaylistRes,\n} from \"../models/playlist\";\nimport api from \"./__baseAIP\";\n\nexport const getCurrentUserPlaylists = async ({\n  limit,\n  offset,\n}: GetCurrentUserPlaylistReq): Promise<GetCurrentUserPlaylistRes> => {\n  try {\n    const res = await api.get(\"/me/playlists\", {\n      params: { limit, offset },\n    });\n\n    return res.data;\n  } catch (err) {\n    throw new Error(\"실패: playlist 가져오기\");\n  }\n};\n","import { useEffect } from \"react\";\n\nconst useInfiniteScroll = ({\n  isLoading,\n  isFinished,\n  onIntersect,\n}: {\n  isLoading: boolean;\n  isFinished: boolean;\n  onIntersect: () => void;\n}) => {\n  useEffect(() => {\n    if (isLoading) return;\n    if (isFinished) return;\n\n    const observer = new IntersectionObserver(\n      (entries) => {\n        if (entries[0].isIntersecting) {\n          onIntersect();\n        }\n      },\n      { threshold: 0 }\n    );\n\n    const observerTarget = document.getElementById(\"observer\");\n    if (observerTarget) observer.observe(observerTarget);\n\n    return () => {\n      if (observerTarget) observer.unobserve(observerTarget);\n    };\n  }, [isLoading, isFinished, onIntersect]);\n};\n\nexport default useInfiniteScroll;\n","export default __webpack_public_path__ + \"images/fake_Logo.png?ver=23c568bf691b001bb110dc7d5d52caaa\";","// https://developer.spotify.com/documentation/web-api/tutorials/code-pkce-flow\n\nexport const generateRandomString = (length: number): string => {\n  const possible =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  const values = crypto.getRandomValues(new Uint8Array(length));\n  return values.reduce((acc, x) => acc + possible[x % possible.length], \"\");\n};\n\nexport const sha256 = async (plain: string): Promise<ArrayBuffer> => {\n  const encoder = new TextEncoder();\n  const data = encoder.encode(plain);\n  return window.crypto.subtle.digest(\"SHA-256\", data);\n};\n\nexport const base64encode = (input: ArrayBuffer) => {\n  return btoa(String.fromCharCode(...new Uint8Array(input)))\n    .replace(/=/g, \"\")\n    .replace(/\\+/g, \"-\")\n    .replace(/\\//g, \"_\");\n};\n","import { clientID, SCOPES } from \"../configs/auth\";\nimport { REDIRCT_URI } from \"../configs/commonConfig\";\nimport { AuthParamsType } from \"../models/auth\";\nimport { base64encode, generateRandomString, sha256 } from \"./crypto\";\n\nexport const getSpotifyLogin = async () => {\n  const codeVerifier = generateRandomString(64);\n  const hashed = await sha256(codeVerifier);\n  const codeChallenge = base64encode(hashed);\n\n  const clientId = clientID;\n  const redirectUri = REDIRCT_URI;\n\n  const scope = SCOPES;\n  const authUrl = new URL(\"https://accounts.spotify.com/authorize\");\n\n  // generated in the previous step\n  window.localStorage.setItem(\"code_verifier\", codeVerifier);\n\n  if (clientId && redirectUri) {\n    const params: AuthParamsType = {\n      response_type: \"code\",\n      client_id: clientId,\n      scope,\n      code_challenge_method: \"S256\",\n      code_challenge: codeChallenge,\n      redirect_uri: redirectUri,\n    };\n\n    authUrl.search = new URLSearchParams(Object.entries(params)).toString();\n\n    // console.log(authUrl.search);\n    window.location.href = authUrl.toString(); // spotify login 주소 열림\n  }\n};\n\nexport const logout = () => {\n  localStorage.removeItem(\"code_verifier\");\n  localStorage.removeItem(\"access_token\");\n  window.location.href = \"/\";\n};\n","import { useState } from \"react\";\n\nconst codes = [\"#ed9282\", \"#fad57a\", \"#f48aab\", \"#87bbe2\", \"#56b444\"];\n\nconst useRendomColor = () => {\n  const [colorCode, setColorCode] = useState(\"#56b444\");\n\n  const getRandomCode = (): void => {\n    const codeList = codes.filter((c) => c !== colorCode);\n    const randomidx = Math.floor(Math.random() * codeList.length);\n    setColorCode(codeList[randomidx]);\n  };\n\n  return { colorCode, getRandomCode };\n};\n\nexport default useRendomColor;\n","export default __webpack_public_path__ + \"images/profileIcon.png?ver=e2f1e38bebae9a2ca011ed6975e9d0d9\";","import { styled } from \"@mui/material\";\nimport { RefObject } from \"react\";\nimport { logout } from \"../../../utils/auth\";\n\ninterface ModalProps {\n  isOpen: boolean;\n  itemRef: RefObject<HTMLDivElement | null>;\n  changeColorCode: () => void;\n}\n\nconst ProfileModal = ({ isOpen, itemRef, changeColorCode }: ModalProps) => {\n  if (!isOpen) return null;\n\n  return (\n    <ModalBox ref={itemRef}>\n      <Menu\n        onClick={(e) => {\n          e.stopPropagation();\n          changeColorCode();\n        }}\n      >\n        랜덤 프로필\n      </Menu>\n      <div className=\"hr\" />\n\n      <Menu onClick={logout}>Logout</Menu>\n    </ModalBox>\n  );\n};\n\nexport default ProfileModal;\n\nconst ModalBox = styled(\"div\")`\n  position: absolute;\n  right: -30%;\n  top: 110%;\n  width: 12rem;\n  padding: 4px;\n  font-size: 16px;\n  background-color: #303030;\n  border-radius: 4px;\n\n  div.hr {\n    height: 1px;\n    background-color: #484848;\n  }\n`;\nconst Menu = styled(\"div\")`\n  padding: 0.5rem 1rem;\n  border-radius: 4px;\n\n  &:hover {\n    background-color: #4d4d4d;\n    text-decoration: underline;\n  }\n`;\n","import { styled } from \"@mui/material\";\nimport useGetProfile from \"../../../hook/useGetProfile\";\nimport useModal from \"../../../hook/useModal\";\nimport useOutsideClick from \"../../../hook/useOutsideClick\";\nimport useRendomColor from \"../../../hook/useRendomColor\";\nimport ProfileIcon from \"../../../image/profileIcon.png\";\nimport ProfileModal from \"./ProfileModal\";\n\nconst ProfileImage = ({ imageUrl }: { imageUrl: string }) => {\n  return <Icon src={imageUrl} alt=\"프로필 아이콘\" />;\n};\n\nconst Profile = () => {\n  const { data: userProfile } = useGetProfile();\n  const { colorCode, getRandomCode } = useRendomColor();\n  const { open, open_modal, close_modal } = useModal();\n  const ModalRef = useOutsideClick(close_modal);\n\n  const imageUrl = userProfile?.images?.[0]?.url || null;\n\n  return (\n    <Container onClick={open_modal}>\n      <ProfileBox haveImgUrl={!!imageUrl} code={colorCode}>\n        <ProfileImage imageUrl={imageUrl || ProfileIcon} />\n      </ProfileBox>\n\n      <ProfileModal\n        isOpen={open}\n        itemRef={ModalRef}\n        changeColorCode={() => close_modal(getRandomCode)}\n      />\n    </Container>\n  );\n};\n\nexport default Profile;\n\nconst Container = styled(\"div\")`\n  position: relative;\n`;\nconst ProfileBox = styled(\"div\")<{ haveImgUrl: boolean; code: string }>`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 3.4rem;\n  aspect-ratio: 1/1;\n  background-color: ${({ code }) => code};\n  border-radius: 50px;\n  border: 8px solid;\n  border-color: ${({ haveImgUrl, code }) => (haveImgUrl ? code : \"#1f1f1f\")};\n  overflow: hidden;\n  cursor: pointer;\n`;\nconst Icon = styled(\"img\")`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n","import { useState } from \"react\";\n\nconst useModal = () => {\n  const [open, setOpen] = useState(false);\n  const open_modal = () => setOpen(true);\n\n  const close_modal = (f?: () => void): void => {\n    setOpen(false);\n    if (f) f();\n  };\n\n  return { open, close_modal, open_modal };\n};\nexport default useModal;\n","import { useEffect, useRef } from \"react\";\n\n/** 모달 바깥을 누르면 모달을 꺼지는 훅 */\nconst useOutsideClick = (f: () => void) => {\n  const itemRef = useRef<HTMLDivElement>(null);\n\n  const click = (e: MouseEvent) => {\n    if (itemRef.current && !itemRef.current.contains(e.target as Node)) {\n      f();\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"mouseup\", click);\n    return () => {\n      document.removeEventListener(\"mouseup\", click);\n    };\n  }, [f]);\n\n  return itemRef;\n};\n\nexport default useOutsideClick;\n","import { Button, styled } from \"@mui/material\";\nimport { getSpotifyLogin } from \"../../../utils/auth\";\nimport Profile from \"./Profile\";\n\nconst LoginBtn = () => {\n  if (localStorage.getItem(\"access_token\")) {\n    return <Profile />;\n  }\n\n  return (\n    <Login variant=\"contained\" color=\"secondary\" onClick={getSpotifyLogin}>\n      로그인하기\n    </Login>\n  );\n};\n\nexport default LoginBtn;\n\nconst Login = styled(Button)`\n  width: 7rem;\n  height: 2.6rem;\n  font-size: 16px;\n  font-weight: bold;\n`;\n","import { styled } from \"@mui/material\";\nimport FackLogo from \"../../image/fake_Logo.png\";\nimport Login from \"./Login/Login\";\n\nconst Topbar = () => {\n  return (\n    <Container>\n      <Logo\n        src={FackLogo}\n        alt=\"fack_logo\"\n        onClick={() => (window.location.href = \"/\")}\n      />\n\n      <Login />\n    </Container>\n  );\n};\n\nexport default Topbar;\n\nconst Container = styled(\"div\")`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  padding: 0 1rem;\n  height: 3rem;\n  margin-bottom: 8px;\n  color: white;\n  border-radius: 8px;\n`;\n\nconst Logo = styled(\"img\")`\n  width: 2.2rem;\n  cursor: pointer;\n`;\n","import { styled } from \"@mui/material\";\nimport { Outlet } from \"react-router\";\nimport NavComponent from \"./component/NavComponent\";\nimport LibraryHead from \"./component/Library/LibraryHead\";\nimport Library from \"./component/Library/Library\";\nimport Topbar from \"./component/Topbar\";\n\nconst AppLayout = () => {\n  return (\n    <Layout>\n      <Topbar />\n\n      <PageContainer>\n        <SiderBar>\n          <NavComponent />\n\n          <ContentBox>\n            <LibraryHead />\n            <Library />\n          </ContentBox>\n        </SiderBar>\n\n        <MainContent>\n          <Outlet />\n        </MainContent>\n      </PageContainer>\n    </Layout>\n  );\n};\nexport default AppLayout;\n\nconst Layout = styled(\"div\")`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 100vh;\n  padding: 8px;\n`;\nconst PageContainer = styled(\"div\")`\n  display: flex;\n  flex: 1;\n`;\nconst SiderBar = styled(\"div\")<{ flex?: number }>`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  min-width: 16rem;\n  max-width: 26rem;\n  height: 100%;\n  margin-right: 8px;\n\n  ${({ theme }) => theme.breakpoints.down(\"sm\")} {\n    display: none;\n  }\n`;\nconst ContentBox = styled(\"div\")<{ flex?: number }>`\n  flex: 1;\n  width: 100%;\n  padding: 0.5rem;\n  color: white;\n  background-color: #121212;\n  border-radius: 8;\n`;\nconst MainContent = styled(\"div\")`\n  flex: 3;\n  padding: 1rem;\n  background: linear-gradient(to bottom, #252525, #121212 30%);\n  border-radius: 8px;\n`;\n","import { Alert } from \"@mui/material\";\n\nconst ErrorMessage = ({ errMessage }: { errMessage: string }) => {\n  return <Alert severity=\"error\">{errMessage} </Alert>;\n};\n\nexport default ErrorMessage;\n"],"names":["NavComponent","pathname","useLocation","isCurrentPath","menu","_jsxs","Container","children","StyledNavLink","to","className","concat","sx","margiBnottom","_jsx","src","HomeIcon","alt","Typography","variant","fontWeight","SearchIcon","styled","_templateObject","_taggedTemplateLiteral","NavLink","_templateObject2","LibraryHead","Head","Box","display","Icon","BookmarkIcon","Button","AddIcon","api","axios","create","baseURL","SPOTIFY_BASE_URL","headers","Authorization","localStorage","getItem","interceptors","request","use","req","getCurrentUserProfile","async","get","data","err","Error","useGetProfile","accessToken","useQuery","queryKey","queryFn","enabled","staleTime","Infinity","refetchOnWindowFocus","refetchOnMount","retry","EmptyPlayList","EmptyPlaylistCard","CreateBtn","color","_ref","list","map","item","idx","_item$owner","PlayListBox","fontSize","name","owner","display_name","Library","user","isLoading","error","hasNextPage","fetchNextPage","isFetchingNextPage","limit","offset","useInfiniteQuery","_ref2","pageParam","params","getCurrentUserPlaylists","initialPageParam","getNextPageParam","lastPage","next","nextOffset","URL","searchParams","parseInt","undefined","useGetCurrentUserPlaylists","isFinished","onIntersect","useEffect","observer","IntersectionObserver","entries","isIntersecting","threshold","observerTarget","document","getElementById","observe","unobserve","useInfiniteScroll","LoadingBar","ErrorMessage","errMessage","message","pages","total","_Fragment","page","PlaylistItem","items","Loding","Observer","id","getSpotifyLogin","codeVerifier","crypto","getRandomValues","Uint8Array","reduce","acc","x","possible","codeChallenge","input","TextEncoder","encode","plain","window","subtle","digest","sha256","btoa","String","fromCharCode","replace","clientId","clientID","redirectUri","REDIRCT_URI","scope","SCOPES","authUrl","setItem","response_type","client_id","code_challenge_method","code_challenge","redirect_uri","search","URLSearchParams","Object","toString","location","href","logout","removeItem","codes","isOpen","itemRef","changeColorCode","ModalBox","ref","Menu","onClick","e","stopPropagation","ProfileImage","imageUrl","Profile","_userProfile$images","userProfile","colorCode","getRandomCode","useRendomColor","setColorCode","useState","codeList","filter","c","randomidx","Math","floor","random","length","open","open_modal","close_modal","useModal","setOpen","f","ModalRef","useRef","click","current","contains","target","addEventListener","removeEventListener","useOutsideClick","images","url","ProfileBox","haveImgUrl","code","ProfileIcon","ProfileModal","_ref3","_templateObject3","LoginBtn","Login","Topbar","Logo","FackLogo","AppLayout","Layout","PageContainer","SiderBar","ContentBox","MainContent","Outlet","theme","breakpoints","down","_templateObject4","_templateObject5","Alert","severity"],"sourceRoot":""}