{"version":3,"file":"402.js?ver=9833fe51f1806a015c21","mappings":"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","sources":["webpack://spotify-deemo/./src/image/music.png","webpack://spotify-deemo/./src/image/fake_Logo.png","webpack://spotify-deemo/./src/Layout/ErrorMessage.tsx","webpack://spotify-deemo/./src/api/playlist.ts","webpack://spotify-deemo/./src/api/__baseAIP.ts","webpack://spotify-deemo/./src/hook/useGetPlaylist.ts","webpack://spotify-deemo/./src/page/PlayList/component/DetailHeader.tsx","webpack://spotify-deemo/./src/page/PlayList/PlayListDetailPage.tsx"],"sourcesContent":["export default __webpack_public_path__ + \"images/music.png?ver=708d7d1874e81d24a372040f4906d76d\";","export default __webpack_public_path__ + \"images/fake_Logo.png?ver=23c568bf691b001bb110dc7d5d52caaa\";","import { Alert } from \"@mui/material\";\n\nconst ErrorMessage = ({ errMessage }: { errMessage: string }) => {\n  return <Alert severity=\"error\">{errMessage} </Alert>;\n};\n\nexport default ErrorMessage;\n","import {\n  GetCurrentUserPlaylistReq,\n  GetCurrentUserPlaylistRes,\n  GetPlaylistReq,\n  Playlist,\n} from \"../models/playlist\";\nimport api from \"./__baseAIP\";\n\nexport const getCurrentUserPlaylists = async ({\n  limit,\n  offset,\n}: GetCurrentUserPlaylistReq): Promise<GetCurrentUserPlaylistRes> => {\n  try {\n    const res = await api.get(\"/me/playlists\", {\n      params: { limit, offset },\n    });\n\n    return res.data;\n  } catch (err) {\n    throw new Error(\"실패: playlist 가져오기\");\n  }\n};\n\nexport const getPlaylist = async (\n  params: GetPlaylistReq\n): Promise<Playlist> => {\n  try {\n    const res = await api.get(`/playlists/${params.playlist_id}`, {\n      params,\n    });\n    return res.data;\n  } catch (error) {\n    throw new Error(\"fail getPlaylist\");\n  }\n};\n","import axios, { AxiosInstance } from \"axios\";\nimport { SPOTIFY_BASE_URL } from \"../configs/commonConfig\";\n\nconst api: AxiosInstance = axios.create({\n  baseURL: SPOTIFY_BASE_URL,\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${localStorage.getItem(\"access_token\")}`,\n  },\n});\n\napi.interceptors.request.use((req) => {\n  req.headers.Authorization = `Bearer ${localStorage.getItem(\"access_token\")}`;\n\n  return req;\n});\n\nexport default api;\n","import { useQuery } from \"@tanstack/react-query\";\nimport { GetPlaylistReq } from \"../models/playlist\";\nimport { getPlaylist } from \"../api/playlist\";\n\nconst useGetPlaylist = (params: GetPlaylistReq) => {\n  return useQuery({\n    queryKey: [\"playlist-detail\", params.playlist_id],\n    queryFn: () => {\n      return getPlaylist(params);\n    },\n    enabled: !!params.playlist_id,\n  });\n};\n\nexport default useGetPlaylist;\n","import { styled } from \"@mui/material\";\nimport FackLogo from \"../../../image/fake_Logo.png\";\nimport MusicIcon from \"../../../image/music.png\";\n\ninterface PlaylistDetail {\n  image: string | null;\n  listName: string;\n  description: string;\n  ownerName: string;\n  count: number;\n}\n\nconst DetailHeader = ({\n  image,\n  listName,\n  description,\n  ownerName,\n  count,\n}: PlaylistDetail) => {\n  return (\n    <PlayListHeader>\n      <PicBox>\n        <img src={image || MusicIcon} />\n      </PicBox>\n\n      <div>\n        <ListName>{listName}</ListName>\n        <div>{description}</div>\n        <InfoBox>\n          <img src={FackLogo} />\n          <span>{ownerName}</span>\n          <span>•</span>\n          <span>{count}곡</span>\n        </InfoBox>\n      </div>\n    </PlayListHeader>\n  );\n};\n\nexport default DetailHeader;\n\nconst PlayListHeader = styled(\"div\")`\n  display: flex;\n  align-items: center;\n  justify-items: flex-start;\n  padding: 5rem 2rem 1.5rem 2rem;\n  background: linear-gradient(to bottom, #424242, #222222 90%);\n`;\nconst PicBox = styled(\"div\")`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  width: 100%;\n  max-width: 15rem;\n  aspect-ratio: 1/1;\n  margin-right: 1.5rem;\n  background-color: #313131;\n  border-radius: 4px;\n  box-shadow: 0 3px 10px 2px #0000009d;\n  overflow: hidden;\n  cursor: pointer;\n\n  img.Thumbnail {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n\n  ${({ theme }) => theme.breakpoints.down(\"md\")} {\n    max-width: 13rem;\n  }\n`;\nconst ListName = styled(\"div\")`\n  font-size: 55px;\n  font-weight: 700;\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n\n  ${({ theme }) => theme.breakpoints.down(\"md\")} {\n    font-size: 40px;\n  }\n  ${({ theme }) => theme.breakpoints.down(\"sm\")} {\n    font-size: 30px;\n  }\n`;\nconst InfoBox = styled(\"div\")`\n  display: flex;\n  align-items: center;\n  margin-top: 1rem;\n  img {\n    width: 20px;\n  }\n  span {\n    margin-left: 5px;\n  }\n`;\n","import { useParams } from \"react-router\";\nimport useGetPlaylist from \"../../hook/useGetPlaylist\";\nimport ErrorMessage from \"../../Layout/ErrorMessage\";\nimport LoadingBar from \"../../style/LoadingBar\";\nimport DetailHeader from \"./component/DetailHeader\";\n\nconst PlayListDetailPage = () => {\n  const { id = \"\" } = useParams<{ id: string }>();\n  const {\n    data: playlist,\n    error,\n    isLoading,\n  } = useGetPlaylist({ playlist_id: id });\n\n  // console.log(\"playlist   \", playlist);\n\n  if (isLoading) {\n    return <LoadingBar />;\n  }\n  if (error) {\n    return <ErrorMessage errMessage={error.message} />;\n  }\n  return (\n    <div>\n      <DetailHeader\n        image={playlist?.images ? playlist?.images[0].url : null}\n        listName={playlist?.name || \"플레이리스트\"}\n        description={playlist?.description || \"\"}\n        ownerName={playlist?.owner?.display_name || \"알수없음\"}\n        count={playlist?.tracks?.items.length || 0}\n      />\n    </div>\n  );\n};\nexport default PlayListDetailPage;\n"],"names":["_ref","errMessage","_jsxs","Alert","severity","children","getCurrentUserPlaylists","async","limit","offset","api","get","params","data","err","Error","getPlaylist","concat","playlist_id","error","axios","create","baseURL","SPOTIFY_BASE_URL","headers","Authorization","localStorage","getItem","interceptors","request","use","req","useQuery","queryKey","queryFn","enabled","image","listName","description","ownerName","count","PlayListHeader","_jsx","PicBox","src","MusicIcon","ListName","InfoBox","FackLogo","styled","_templateObject","_taggedTemplateLiteral","_templateObject2","_ref2","theme","breakpoints","down","_templateObject3","_ref3","_ref4","_templateObject4","PlayListDetailPage","_playlist$owner","_playlist$tracks","id","useParams","playlist","isLoading","useGetPlaylist","LoadingBar","ErrorMessage","message","DetailHeader","images","url","name","owner","display_name","tracks","items","length"],"sourceRoot":""}