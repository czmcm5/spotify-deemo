{"version":3,"file":"214.js?ver=cbbefe60358f9d293516","mappings":";0IACA,SAASA,EAAyBC,EAAGC,GACnC,GAAI,MAAQD,EAAG,MAAO,CAAC,EACvB,IAAIE,EACFC,EACAC,GAAI,OAA6BJ,EAAGC,GACtC,GAAII,OAAOC,sBAAuB,CAChC,IAAIC,EAAIF,OAAOC,sBAAsBN,GACrC,IAAKG,EAAI,EAAGA,EAAII,EAAEC,OAAQL,IAAKD,EAAIK,EAAEJ,IAAK,IAAMF,EAAEQ,QAAQP,IAAM,CAAC,EAAEQ,qBAAqBC,KAAKX,EAAGE,KAAOE,EAAEF,GAAKF,EAAEE,GAClH,CACA,OAAOE,CACT,ouBCXA,MAAMQ,EAAW,CACf,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGWC,EAAaC,GACjBF,EAASE,EAAM,kpBCbxB,MAmBA,EAnBwBC,IAQlB,IARmB,QACvBC,EAAO,KACPC,GAMDF,EALIG,GAAKnB,EAAAA,EAAAA,GAAAgB,EAAAI,GAMR,OACEC,EAAAA,EAAAA,MAACC,EAAOC,EAAAA,EAAA,CAACN,QAASA,GAAaE,GAAK,IAAAK,SAAA,EAClCC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,QAAQ,KAAIH,SAAEN,EAAKU,QAC/BH,EAAAA,EAAAA,KAACI,EAAM,CAAAL,UACLC,EAAAA,EAAAA,KAAA,OAAKK,IAAKZ,EAAKa,MAAM,GAAGC,IAAKC,IAAI,oBAQnCX,GAAUY,EAAAA,EAAAA,IAAO,MAAPA,CAAaC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+PAKPC,IAAA,IAAC,QAAEpB,GAASoB,EAAA,OAAKpB,KAYjCY,GAASK,EAAAA,EAAAA,IAAO,MAAPA,CAAaI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,0cC/B5B,MAyDA,EAzDmBG,KACjB,MAAMC,GAAWC,EAAAA,EAAAA,OAEfC,KAAMC,EAAY,MAClBC,EAAK,UACLC,EAAS,YACTC,EAAW,cACXC,EAAa,mBACbC,GCb0BhC,KAAuC,IAAtC,MAAEiC,GAA+BjC,EAC9D,MAAMkC,GAAcC,EAAAA,EAAAA,KAEpB,OAAOC,EAAAA,EAAAA,GAAiB,CACtBC,SAAU,CAAC,uBACXC,QAASjB,IAAmB,IAAlB,UAAEkB,GAAWlB,EACrB,GAAIa,EACF,MCL2BM,OACjCC,EACAC,KAEA,IAYE,aAXkBC,EAAAA,EAAMC,IAAI,GAADC,OAAIC,EAAAA,EAAgB,sBAAsB,CACnEC,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAFH,OAAYJ,IAE3BC,OAAMnC,EAAA,CACJ0B,MAAO,IACJS,MAIIhB,IACb,CAAE,MAAOuB,GACP,MAAM,IAAIC,MAAM,oBAClB,GDdaC,CAAoBjB,EAAa,CAAED,QAAOmB,OAAQb,KAI7Dc,UAAWnB,EACXoB,iBAAkB,EAClBC,iBAAmBC,IACjB,GAAIA,GAAYA,EAASC,WAAWC,KAAM,CACxC,MACMC,EADM,IAAIC,IAAIJ,EAASC,WAAWC,MACjBG,aAAajB,IAAI,UACxC,OAAOe,EAAaG,SAASH,QAAcI,CAC7C,MDJAC,CAAsB,CAAE/B,MAAO,KAWnC,OATAgC,EAAAA,EAAAA,GAAkB,CAChBC,KAAM,eACNrC,UAAWG,EACXmC,YAAarC,EACbsC,YAAarC,IAKVJ,EAGDE,GACKpB,EAAAA,EAAAA,KAAC4D,EAAAA,EAAU,IAEhBzC,GACKnB,EAAAA,EAAAA,KAAC6D,EAAAA,EAAY,CAACC,WAAY3C,EAAM4C,WAGvCnE,EAAAA,EAAAA,MAAAoE,EAAAA,SAAA,CAAAjE,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,QAAQ,KAAK+D,QAAS,EAAGC,WAAY,EAAEnE,SAAC,aAIpDH,EAAAA,EAAAA,MAACuE,EAAI,CAAApE,SAAA,CACFmB,aAAY,EAAZA,EAAckD,MAAMC,KAAKZ,GACxBA,aAAI,EAAJA,EAAMT,WAAWsB,MAAMD,KAAI,CAAC5E,EAAMH,KAChCU,EAAAA,EAAAA,KAACuE,EAAe,CAEd9E,KAAMA,EACND,QAASH,EAAUC,GACnBkF,QAASA,KAAMC,OAxBHC,EAwBkBjF,EAAKU,KAxBFY,EAAS2D,GAA9BA,QAqBPpF,QAQXU,EAAAA,EAAAA,KAAC2E,EAAAA,EAAS,CACRvD,UAAWG,EACXmC,YAAarC,EACbuD,UAAU,KAEVrD,IAAsBvB,EAAAA,EAAAA,KAAC6E,EAAAA,EAAQ,CAACC,GAAG,gCA/BlC,MAsCLX,GAAO1D,EAAAA,EAAAA,IAAO,MAAPA,CAAaC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4WActBpB,IAAA,IAAC,MAAEwF,GAAOxF,EAAA,OAAKwF,EAAMC,YAAYC,KAAK,kEGhF1C,MAUA,EAV6BvD,KAC3B,MAAM,KAAET,IAASiE,EAAAA,EAAAA,GAAS,CACxBtD,SAAU,CAAC,oBACXC,QAASsD,EAAAA,IAIX,OADoBlE,aAAI,EAAJA,EAAMmE,uECP5B,MAIA,EAJqB7F,IAA4C,IAA3C,WAAEuE,GAAoCvE,EAC1D,OAAOK,EAAAA,EAAAA,MAACyF,EAAAA,EAAK,CAACC,SAAS,QAAOvF,SAAA,CAAE+D,EAAW,uDCD7C,MAiCA,EAjC0BvE,IAUpB,IAVqB,KACzBkE,EAAI,UACJrC,EAAS,WACTsC,EAAU,YACVC,GAMDpE,GACCgG,EAAAA,EAAAA,YAAU,KACR,GAAInE,EAAW,OACf,GAAIsC,EAAY,OAEhB,MAAM8B,EAAW,IAAIC,sBAClBC,IACKA,EAAQ,GAAGC,gBACbhC,MAGJ,CAAEiC,UAAW,IAGTC,EAAiBC,SAASC,eAAe,YAAD3D,OAAaqB,IAG3D,OAFIoC,GAAgBL,EAASQ,QAAQH,GAE9B,KACDA,GAAgBL,EAASS,UAAUJ,MAExC,CAACzE,EAAWsC,EAAYC,qDCxBd,SAASlD,EAAOyF,EAAKC,GAClC,IAAIC,EAsBJ,OApBEA,EADED,GACc,QAASD,GAAKG,WAAW,CACvCC,YAAaH,EAAQI,MACrBC,kBAAmBL,EAAQK,qBAGb,QAASN,GAepBE,CACT,2FC7BA,MAsBA,EAtBkB7G,IAQZ,IARa,UACjB6B,EAAS,WACTsC,EAAU,SACVkB,GAAW,GAKZrF,EACC,OACES,EAAAA,EAAAA,KAACyG,EAAM,CAAA1G,SACJqB,GACCpB,EAAAA,EAAAA,KAAC0G,EAAAA,EAAc,CAACC,MAAO,GAAIC,OAAQ,KACjClD,GAAckB,GAChB5E,EAAAA,EAAAA,KAAA,OAAAD,SAAK,cAELC,EAAAA,EAAAA,KAAAgE,EAAAA,SAAA,OAQFyC,GAAShG,EAAAA,EAAAA,IAAO,MAAPA,CAAaC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,wIASfkE,GAAWpE,EAAAA,EAAAA,IAAO,MAAPA,CAAaI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA","sources":["webpack://spotify-deemo/./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","webpack://spotify-deemo/./src/utils/category.ts","webpack://spotify-deemo/./src/page/Search/component/CategoryItem.tsx","webpack://spotify-deemo/./src/page/Search/SearchPage.tsx","webpack://spotify-deemo/./src/query/useGetSeveralCategory.ts","webpack://spotify-deemo/./src/api/category.ts","webpack://spotify-deemo/./src/query/useGetSpoAccessToken.ts","webpack://spotify-deemo/./src/Layout/ErrorMessage.tsx","webpack://spotify-deemo/./src/hook/useInfiniteScroll.ts","webpack://spotify-deemo/./node_modules/@mui/styled-engine-sc/esm/index.js","webpack://spotify-deemo/./src/style/LodingBox.tsx"],"sourcesContent":["import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nfunction _objectWithoutProperties(e, t) {\n  if (null == e) return {};\n  var o,\n    r,\n    i = objectWithoutPropertiesLoose(e, t);\n  if (Object.getOwnPropertySymbols) {\n    var n = Object.getOwnPropertySymbols(e);\n    for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]);\n  }\n  return i;\n}\nexport { _objectWithoutProperties as default };","const codes_12 = [\n  \"#E8115B\",\n  \"#477D95\",\n  \"#503750\",\n  \"#7D4B32\",\n  \"#E61E32\",\n  \"#006450\",\n  \"#8D67AB\",\n  \"#477D95\",\n  \"#BA5D07\",\n  \"#A56752\",\n  \"#FF0090\",\n  \"#8D67AB\",\n];\n\nexport const getBgolor = (idx: number) => {\n  return codes_12[idx % 12];\n};\n","import { styled, Typography } from \"@mui/material\";\nimport { CategoryItem } from \"../../../models/category\";\n\nconst CategoryItemBox = ({\n  bgColor,\n  item,\n  ...props\n}: {\n  bgColor: string;\n  item: CategoryItem;\n  onClick: () => void;\n}) => {\n  return (\n    <CardBox bgColor={bgColor} {...props}>\n      <Typography variant=\"h1\">{item.name}</Typography>\n      <PicBox>\n        <img src={item.icons[0].url} alt=\"카테고리 아이콘\" />\n      </PicBox>\n    </CardBox>\n  );\n};\n\nexport default CategoryItemBox;\n\nconst CardBox = styled(\"div\")<{ bgColor: string }>`\n  position: relative;\n  min-width: 0;\n  aspect-ratio: 3/2;\n  padding: 1rem;\n  background-color: ${({ bgColor }) => bgColor};\n  border-radius: 8px;\n  overflow: hidden;\n  cursor: pointer;\n\n  &:hover {\n    > div {\n      right: 0;\n      bottom: 0;\n    }\n  }\n`;\nconst PicBox = styled(\"div\")`\n  position: absolute;\n  right: -5%;\n  bottom: -10%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 45%;\n  aspect-ratio: 1/1;\n  background-color: #313131;\n  box-shadow: 0 3px 6px 2px #00000040;\n  border-radius: 4px;\n  overflow: hidden;\n  transform: rotate(45deg);\n  transition: bottom 0.4s ease, right 0.4s ease;\n\n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n`;\n","import { styled, Typography } from \"@mui/material\";\nimport ErrorMessage from \"../../Layout/ErrorMessage\";\nimport useGetSeveralCategory from \"../../query/useGetSeveralCategory\";\nimport LoadingBar from \"../../style/LoadingBar\";\nimport { getBgolor } from \"../../utils/category\";\nimport useInfiniteScroll from \"../../hook/useInfiniteScroll\";\nimport LoadState, { Observer } from \"../../style/LodingBox\";\nimport CategoryItemBox from \"./component/CategoryItem\";\nimport { useNavigate } from \"react-router\";\n\nconst SearchPage = () => {\n  const Navigate = useNavigate();\n  const {\n    data: categoryList,\n    error,\n    isLoading,\n    hasNextPage,\n    fetchNextPage,\n    isFetchingNextPage,\n  } = useGetSeveralCategory({ limit: 40 });\n\n  useInfiniteScroll({\n    page: \"categoryList\",\n    isLoading: isFetchingNextPage,\n    isFinished: !hasNextPage,\n    onIntersect: fetchNextPage,\n  });\n\n  const goSearchResult = (category: string) => Navigate(category);\n\n  if (!categoryList) {\n    return null;\n  }\n  if (isLoading) {\n    return <LoadingBar />;\n  }\n  if (error) {\n    return <ErrorMessage errMessage={error.message} />;\n  }\n  return (\n    <>\n      <Typography variant=\"h1\" padding={2} paddingTop={6}>\n        모두 둘러보기\n      </Typography>\n\n      <List>\n        {categoryList?.pages.map((page) =>\n          page?.categories.items.map((item, idx) => (\n            <CategoryItemBox\n              key={idx}\n              item={item}\n              bgColor={getBgolor(idx)}\n              onClick={() => goSearchResult(item.name)}\n            />\n          ))\n        )}\n\n        <LoadState\n          isLoading={isFetchingNextPage}\n          isFinished={!hasNextPage}\n          showText={false}\n        />\n        {!isFetchingNextPage && <Observer id=\"observer-categoryList\" />}\n      </List>\n    </>\n  );\n};\nexport default SearchPage;\n\nconst List = styled(\"div\")`\n  box-sizing: border-box;\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  width: 100%;\n  max-height: 100%;\n  gap: 1.5rem;\n  padding: 1rem;\n  padding-bottom: 8rem;\n  overflow: auto;\n\n  @media screen and (max-width: 1200px) {\n    grid-template-columns: repeat(3, 1fr);\n  }\n  ${({ theme }) => theme.breakpoints.down(\"md\")} {\n    grid-template-columns: repeat(2, 1fr);\n  }\n`;\n","import { useInfiniteQuery } from \"@tanstack/react-query\";\nimport { getServeralCategory } from \"../api/category\";\nimport { GetServeralCategoryReq } from \"../models/category\";\nimport useGetSpoAccessToken from \"./useGetSpoAccessToken\";\n\nconst useGetSeveralCategory = ({ limit }: GetServeralCategoryReq) => {\n  const clientToken = useGetSpoAccessToken();\n\n  return useInfiniteQuery({\n    queryKey: [\"serveral-categories\"],\n    queryFn: ({ pageParam }) => {\n      if (clientToken) {\n        return getServeralCategory(clientToken, { limit, offset: pageParam });\n      }\n      return undefined;\n    },\n    enabled: !!clientToken,\n    initialPageParam: 0,\n    getNextPageParam: (lastPage) => {\n      if (lastPage && lastPage.categories.next) {\n        const url = new URL(lastPage.categories.next);\n        const nextOffset = url.searchParams.get(\"offset\");\n        return nextOffset ? parseInt(nextOffset) : undefined;\n      }\n      return undefined;\n    },\n  });\n};\n\nexport default useGetSeveralCategory;\n","import axios from \"axios\";\nimport { SPOTIFY_BASE_URL } from \"../configs/commonConfig\";\nimport {\n  GetServeralCategoryReq,\n  GetServeralCategoryRes,\n} from \"../models/category\";\n\nexport const getServeralCategory = async (\n  token: string,\n  params: GetServeralCategoryReq\n): Promise<GetServeralCategoryRes> => {\n  try {\n    const res = await axios.get(`${SPOTIFY_BASE_URL}/browse/categories`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n      params: {\n        limit: 40,\n        ...params,\n      },\n    });\n\n    return res.data;\n  } catch (err) {\n    throw new Error(\"실패: category 가져오기\");\n  }\n};\n","import { useQuery } from \"@tanstack/react-query\";\nimport { getSpotifyToken } from \"../api/authApi\";\n\nconst useGetSpoAccessToken = () => {\n  const { data } = useQuery({\n    queryKey: [\"spo-access-token\"],\n    queryFn: getSpotifyToken,\n  });\n\n  const accessToken = data?.access_token;\n  return accessToken;\n};\n\nexport default useGetSpoAccessToken;\n","import { Alert } from \"@mui/material\";\n\nconst ErrorMessage = ({ errMessage }: { errMessage: string }) => {\n  return <Alert severity=\"error\">{errMessage} </Alert>;\n};\n\nexport default ErrorMessage;\n","import { useEffect } from \"react\";\n\nconst useInfiniteScroll = ({\n  page,\n  isLoading,\n  isFinished,\n  onIntersect,\n}: {\n  page: string;\n  isLoading: boolean;\n  isFinished: boolean;\n  onIntersect: () => void;\n}) => {\n  useEffect(() => {\n    if (isLoading) return;\n    if (isFinished) return;\n\n    const observer = new IntersectionObserver(\n      (entries) => {\n        if (entries[0].isIntersecting) {\n          onIntersect();\n        }\n      },\n      { threshold: 0 }\n    );\n\n    const observerTarget = document.getElementById(`observer-${page}`);\n    if (observerTarget) observer.observe(observerTarget);\n\n    return () => {\n      if (observerTarget) observer.unobserve(observerTarget);\n    };\n  }, [isLoading, isFinished, onIntersect]);\n};\n\nexport default useInfiniteScroll;\n","/**\n * @mui/styled-engine-sc v7.1.1\n *\n * @license MIT\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport scStyled from 'styled-components';\nexport default function styled(tag, options) {\n  let stylesFactory;\n  if (options) {\n    stylesFactory = scStyled(tag).withConfig({\n      displayName: options.label,\n      shouldForwardProp: options.shouldForwardProp\n    });\n  } else {\n    stylesFactory = scStyled(tag);\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    const fn = (...styles) => {\n      const component = typeof tag === 'string' ? `\"${tag}\"` : 'component';\n      if (styles.length === 0) {\n        console.error([`MUI: Seems like you called \\`styled(${component})()\\` without a \\`style\\` argument.`, 'You must provide a `styles` argument: `styled(\"div\")(styleYouForgotToPass)`.'].join('\\n'));\n      } else if (styles.some(style => style === undefined)) {\n        console.error(`MUI: the styled(${component})(...args) API requires all its args to be defined.`);\n      }\n      return stylesFactory(...styles);\n    };\n    fn.withConfig = stylesFactory.withConfig;\n    return fn;\n  }\n  return stylesFactory;\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function internal_mutateStyles(tag, processor) {\n  // Styled-components attaches an instance to `componentStyle`.\n  // https://github.com/styled-components/styled-components/blob/da8151762dcf72735ffba358173d4c097f6d5888/packages/styled-components/src/models/StyledComponent.ts#L257\n  //\n  // The instance contains `rules` (the styles)\n  // https://github.com/styled-components/styled-components/blob/da8151762dcf72735ffba358173d4c097f6d5888/packages/styled-components/src/models/ComponentStyle.ts#L23\n  if (tag.componentStyle) {\n    tag.componentStyle.rules = processor(tag.componentStyle.rules);\n  }\n}\n\n// Not needed anymore, but fixes https://github.com/mui/material-ui/issues/44112\n// TODO: Remove it in v7\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function internal_processStyles(tag, processor) {\n  return internal_mutateStyles(tag, processor);\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function internal_serializeStyles(styles) {\n  return styles;\n}\nexport { ThemeContext, keyframes, css } from 'styled-components';\nexport { default as StyledEngineProvider } from \"./StyledEngineProvider/index.js\";\nexport { default as GlobalStyles } from \"./GlobalStyles/index.js\";","import styled from \"@mui/styled-engine-sc\";\nimport { LoadingSpinner } from \"./LoadingBar\";\n\nconst LoadState = ({\n  isLoading,\n  isFinished,\n  showText = true,\n}: {\n  isLoading: boolean;\n  isFinished: boolean;\n  showText?: boolean;\n}) => {\n  return (\n    <Loding>\n      {isLoading ? (\n        <LoadingSpinner width={30} height={30} />\n      ) : isFinished && showText ? (\n        <div>마지막 입니다.</div>\n      ) : (\n        <></>\n      )}\n    </Loding>\n  );\n};\n\nexport default LoadState;\n\nconst Loding = styled(\"div\")`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 3rem;\n  font-size: 14px;\n  color: #858585;\n`;\n\nexport const Observer = styled(\"div\")`\n  height: 1rem;\n  /* background-color: yellow; */\n`;\n"],"names":["_objectWithoutProperties","e","t","o","r","i","Object","getOwnPropertySymbols","n","length","indexOf","propertyIsEnumerable","call","codes_12","getBgolor","idx","_ref","bgColor","item","props","_excluded","_jsxs","CardBox","_objectSpread","children","_jsx","Typography","variant","name","PicBox","src","icons","url","alt","styled","_templateObject","_taggedTemplateLiteral","_ref2","_templateObject2","SearchPage","Navigate","useNavigate","data","categoryList","error","isLoading","hasNextPage","fetchNextPage","isFetchingNextPage","limit","clientToken","useGetSpoAccessToken","useInfiniteQuery","queryKey","queryFn","pageParam","async","token","params","axios","get","concat","SPOTIFY_BASE_URL","headers","Authorization","err","Error","getServeralCategory","offset","enabled","initialPageParam","getNextPageParam","lastPage","categories","next","nextOffset","URL","searchParams","parseInt","undefined","useGetSeveralCategory","useInfiniteScroll","page","isFinished","onIntersect","LoadingBar","ErrorMessage","errMessage","message","_Fragment","padding","paddingTop","List","pages","map","items","CategoryItemBox","onClick","goSearchResult","category","LoadState","showText","Observer","id","theme","breakpoints","down","useQuery","getSpotifyToken","access_token","Alert","severity","useEffect","observer","IntersectionObserver","entries","isIntersecting","threshold","observerTarget","document","getElementById","observe","unobserve","tag","options","stylesFactory","withConfig","displayName","label","shouldForwardProp","Loding","LoadingSpinner","width","height"],"sourceRoot":""}